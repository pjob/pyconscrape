[{"date": "Mar 14, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-sunday-afternoon-lightning-talks-4903712", "runtime": "01:20:31", "description": "", "title": "PyCon 2011: Sunday Afternoon Lightning Talks"},
{"date": "Mar 14, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-friday-afternoon-lightning-talks-4902699", "runtime": "37:18", "description": "", "title": "PyCon 2011: Friday Afternoon Lightning Talks"},
{"date": "Mar 14, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-saturday-afternoon-lightning-talks-4902747", "runtime": "46:05", "description": "", "title": "PyCon 2011: Saturday Afternoon Lightning Talks"},
{"date": "Mar 15, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-deploying-web-applications-to-the-cloud-2of2-4906623", "runtime": "01:11:36", "description": "Cosmin Stejerean Python makes it easy to develop great web applications. Amazon Web Services (AWS) makes it easy to deploy scalable, fault tolerant applications. In this tutorial we will focus on taking a provided Django web application and deploying it to AWS through a series of hands on exercises using Amazon's load balancing, auto scaling, content delivery and relational database services.", "title": "PyCon 2011: Deploying web applications to the cloud (2of2)"},
{"date": "Mar 15, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-python-mirocommunity-org-universalsubtitles-org-4904512", "runtime": "04:39", "description": "William Kahn-Greene Carl Karsten William Kahn-Greene Carl Karsten By Carl Meyer", "title": "PyCon 2011: Python.MiroCommunity.org + UniversalSubtitles.org"},
{"date": "Mar 14, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-saturday-morning-lightning-talks-4902718", "runtime": "29:26", "description": "", "title": "PyCon 2011: Saturday Morning Lightning Talks"},
{"date": "Mar 14, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-montreal-python-lessons-learned-from-bootstraping-a-python-community-4901495", "runtime": "21:00", "description": "Yannick Gingras Montreal-Python is a user-group formed in 2007. It has since then grown into a thriving community with code sprint and regular meetings attracting over 50 attendees. This talk will present history of the group and will highlight the key factors behind its success with the hope to inspire others to replicate that accomplishment.", "title": "PyCon 2011: Montreal-Python -- Lessons Learned from Bootstraping a Python Community"},
{"date": "Mar 16, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-deploying-web-applications-to-the-cloud-1of2-4908728", "runtime": "01:28:58", "description": "Cosmin Stejerean Python makes it easy to develop great web applications. Amazon Web Services (AWS) makes it easy to deploy scalable, fault tolerant applications. In this tutorial we will focus on taking a provided Django web application and deploying it to AWS through a series of hands on exercises using Amazon's load balancing, auto scaling, content delivery and relational database services.", "title": "PyCon 2011: Deploying web applications to the cloud (1of2)"},
{"date": "Mar 18, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-sunday-morning-lightning-talks-4920649", "runtime": "14:33", "description": "", "title": "PyCon 2011: Sunday Morning Lightning Talks"},
{"date": "Mar 25, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-psf-funds-pypy-4951240", "runtime": "02:33", "description": "Maciej Fija?kowski, Armin Rigo, Alex Gaynor, Laura Creighton and Jacob Hall\u00e9n", "title": "PyCon 2011: PSF funds PyPy"},
{"date": "Mar 14, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-how-to-sell-python-4900958", "runtime": "29:50", "description": "Daniel Greenfeld C. Titus Brown Dan Mesh Rich Leland Frank Wiles A lot of people want to use Python, but their customer, management, school, government, or organization won't let them. Python is a great tool, but it can be challenging to get in the door. This panel will explore how companies and individuals have successfully introduced Python, what tools are available to sell Python, and what pitfalls there are to avoid.", "title": "PyCon 2011: How to sell Python"},
{"date": "Mar 14, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-algorithmic-generation-of-opengl-geometry-4900884", "runtime": "33:21", "description": "Jonathan Hartley Starting from a basic 'hello world' OpenGL app, a simple & Pythonic model of 3D polyhedra is presented, with neat generators to convert these into ctype arrays for OpenGL. Geometric algorithms then generate some fun geometry, and these are compounded to produce successively more complex & interesting shapes.", "title": "PyCon 2011: Algorithmic Generation of OpenGL Geometry"},
{"date": "Mar 14, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-python-3-the-next-generation-is-here-already-4901013", "runtime": "36:51", "description": "wesley chun This talk is about the evolution of Python. We will discuss Python 2 and Python 3: what the compatibility issues are, what the main differences are, and also talk about migration, Python 2.6/2.7, and other transition tools.", "title": "PyCon 2011: Python 3: the next generation is here already"},
{"date": "Mar 14, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-optimal-aircraft-engine-tuner-selection-in-python-4900909", "runtime": "26:26", "description": "Jeffrey Armstrong A numerical algorithm for designing on-board aircraft engine diagnostics has been implemented in Python. Employing the optimization techniques within SciPy, the code performs a search for an optimal vector of parameters for estimating engine variables, including exhaust temperatures and thrust. The algorithm exploits the numerical strengths of Python and SciPy for speed and interoperability.", "title": "PyCon 2011: Optimal Aircraft Engine Tuner Selection in Python"},
{"date": "Mar 14, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-diversity-in-tech-improving-our-toolset-4901048", "runtime": "46:28", "description": "Jennifer Leech As communities allow more diversity, they draw from a larger talent pool, challenge each other more, and hit a higher bar in terms of ingenuity and work-product. However questions surrounding diversity often seem under-examined. What are the effects of diversity in the community, or lack thereof? I intend to approach this topic from an accessible and entertaining, yet analytical perspective.", "title": "PyCon 2011: Diversity in Tech: Improving our Toolset"},
{"date": "Mar 14, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-using-coroutines-to-create-efficient-high-concurrency-web-applications-4900984", "runtime": "38:11", "description": "Matt Spitz Creating high-concurrency python web applications is inherently difficult for a variety of reasons. In this talk, I'll discuss the various iterations of application server paradigms we've used at meebo, the advantages/disadvantages of each approach, and why we've settled on a coroutine-based WSGI setup to handle our high-concurrency web applications going forward.", "title": "PyCon 2011: Using Coroutines to Create Efficient, High-Concurrency Web Applications"},
{"date": "Mar 14, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-firefox-sync-4901005", "runtime": "30:31", "description": "Tarek Ziad\u00e9 Firefox Sync let you access your history, passwords, bookmarks and even open tabs across all your devices, while remaining unreadable on the server through encryption. After a brief introduction on the Sync protocol, this talk will focus on the server, which is written in Python.", "title": "PyCon 2011: Firefox Sync"},
{"date": "Mar 14, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-pluggable-django-patterns-4900929", "runtime": "29:48", "description": "Corey Oordt Pluggable or reusable applications are a key feature of Django, but there is little guidance on writing them well. We'll dig into the different types of Django applications and coding patterns that make writing a reusable application easier. The talk also covers ways to avoid common implementation gotchas.", "title": "PyCon 2011: Pluggable Django Patterns"},
{"date": "Mar 14, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-the-pyramid-faq-4899508", "runtime": "26:19", "description": "Carlos de la Guardia The #pylons IRC channel is the most common way of giving support to users of the Pyramid framework. In this talk we take away some of the most often discussed topics in the channel and give detailed answers to them.", "title": "PyCon 2011: The Pyramid FAQ"},
{"date": "Mar 14, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-testing-the-mobile-and-desktop-web-with-selenium-2-0-better-faster-and-more-pythonicly-4901071", "runtime": "27:32", "description": "Jason Huggins Selenium is a popular web application testing tool for acceptance testing dynamic web applications. Selenium 2.0 has a different architecture that makes it leaner, meaner, and more pythonic -- for testing desktop *and* mobile web (iPhone/Android) apps. This talk will go into detail on how Selenium 2 works. If you like testing and Python, you'll enjoy what's cooking in Selenium 2.", "title": "PyCon 2011: Testing the Mobile (and Desktop) Web with Selenium 2.0 - Better, Faster, and more Pythonicly"},
{"date": "Mar 14, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-django-pitfalls-i-encountered-and-how-to-avoid-them-4899492", "runtime": "24:39", "description": "Luke Sneeringer Are you starting a moderate to large sized Django project? Do you need to plan ahead and build an application that will react to unanticipated needs? This talk covers some techniques and pitfalls I encountered in writing my first reasonably large Django site, and what I did differently the second time I started a project.", "title": "PyCon 2011: Django: Pitfalls I Encountered and How to Avoid Them"},
{"date": "Mar 14, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-python-the-secret-sauce-in-the-open-cloud-4901088", "runtime": "23:21", "description": "Jason Huggins This talk will go into detail on current cloud computing technology, specifically OpenStack and libvirt and how Python is the \"secret sauce\" that powers the open cloud. We'll show how to bring up your own cloud \"from scratch\", and explain why you would do such a thing.", "title": "PyCon 2011: Python - The Secret Sauce in the Open Cloud"},
{"date": "Mar 14, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-reverse-engineering-ian-bicking-s-brain-inside-pip-and-virtualenv-4899496", "runtime": "29:32", "description": "Carl Meyer Pip and virtualenv: many use them; not so many understand just how they work their magic. If you're a pip/virtualenv user but haven't yet dared crack the lid (or you have, and found it a bit difficult to follow), come along for a fast-paced guided tour. Knowing these tools will help you make more effective use of them, and might also turn you into a contributor.", "title": "PyCon 2011: Reverse-engineering Ian Bicking's brain: inside pip and virtualenv"},
{"date": "Mar 14, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-jython-concurrency-4899499", "runtime": "30:57", "description": "Jim Baker Jython is arguably the best Python implementation to target concurrent code. Jython has no GIL, it leverages the Java platform to provide robust support for concurrency in its runtime, and it enables access to a set of high-level abstractions from Java. This talk will walk through at the extreme level pertinent Jython implementation details and a series of examples, including Java integration.", "title": "PyCon 2011: Jython Concurrency"},
{"date": "Mar 14, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-best-practices-for-impossible-deadlines-4899490", "runtime": "27:50", "description": "Christopher Groskopf At the Chicago Tribune we develop, test, and deploy production web applications on schedules that range from two hours to two months. This talk will discuss the tools and techniques that allow us to make our deadlines, including automated deployments, frameworks, just-in-time testing, and more. Attention will be paid to http://github.com/newsapps/beeswithmachineguns and the problems they solve.", "title": "PyCon 2011: Best Practices for Impossible Deadlines"},
{"date": "Mar 14, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-running-django-apps-on-google-app-engine-4899514", "runtime": "36:36", "description": "wesley chun In the past, Django users couldn't run apps unmodified on Google App Engine. Some tools helped with integration but required you to change your data models. Django-nonrel removes this requirement letting you run native Django apps on App Engine with only config changes if you bear in mind its restrictions like no JOINs. In this talk, we'll discuss Django-nonrel & porting App Engine apps to Django.", "title": "PyCon 2011: Running Django Apps on Google App Engine"},
{"date": "Mar 14, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-going-full-python-threadless-4900820", "runtime": "22:02", "description": "Chris McAvoy, VP of Technology - Threadless Threadless is a 10 year old community based design company with an overpowering love of witty t-shirts and a mission to 'inspire awesomeness.' After 10 years of working primarily with PHP, Threadless has decided to use Python as our base development language. The decision was 10% technical and 90% touchy feely. We know what a powerful community can do to a product, and see the same sort of drive and passion in the Python community that we see in our own design community. Python is the peanut butter to our jelly. We're excited to share our jelly with you. Chris McAvoy, VP of Technology at Threadless (and the founder of the Chicago Python Users Group), will share a bit about the companies history, the role of technology in supporting the community at the core of the business, and why Python and Threadless are going to be totally BFF's.", "title": "PyCon 2011: Going Full Python - Threadless"},
{"date": "Mar 14, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-solvcon-a-new-python-based-software-framework-for-massively-parallelized-numerical-simulations-4900870", "runtime": "28:13", "description": "Yung-Yu Chen SOLVCON is the first Python-based software framework for high-resolution simulations of multi-physics conservation laws. More than ninety percents of the codes are done in Python. Performance hot-spots are optimized by C and glued by ctypes library. SOLVCON is high-performance in nature and has been able to utilize 512 4-core nodes at Ohio Supercomputer Center.", "title": "PyCon 2011: SOLVCON: A New Python-Based Software Framework for Massively Parallelized Numerical Simulations"},
{"date": "Mar 14, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-javascript-for-people-who-know-python-4900851", "runtime": "31:25", "description": "Ian Bicking Javascript as a diff on Python.", "title": "PyCon 2011: Javascript for people who know Python"},
{"date": "Mar 14, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-everything-you-wanted-to-know-about-pickling-but-were-afraid-to-ask-4900835", "runtime": "33:29", "description": "Richard T. Saunders Serializing data structures (in Python-speak \"pickling\") to save to disk/socket is an important tool for the programmer: We will discuss how the pickling protocols (0,1,2, and 3) work as well as real-world issues (gotchas, backwards-compatibility, etc). We will concentrate on the basics of this stack-based protocol: what it looks like, how to encode/decode, speeds of different implementations.", "title": "PyCon 2011: Everything You Wanted To Know About Pickling, But Were Afraid To Ask!"},
{"date": "Mar 14, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-mongodb-pylons-at-catch-com-scalable-web-apps-with-python-and-nosql-4899188", "runtime": "26:49", "description": "Niall O'Higgins The Catch.com backend provides an API for publishing and querying your personal data - used by many hugely popular Android, iOS and Web clients. We ported this system to Python and MongoDB, using the Pylons Web framework. This talk details our reasoning for choosing - and experiences with - these cutting-edge Web and NoSQL database technologies in a high-traffic, real-world production system.", "title": "PyCon 2011: MongoDB + Pylons at Catch.com: Scalable Web Apps with Python and NoSQL"},
{"date": "Mar 14, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-large-scale-data-conditioning-processing-with-stackless-python-and-pypes-4899185", "runtime": "29:51", "description": "Eric Gaumer Pypes is a component oriented framework for designing dataflow applications. It uses Stackless Python to model components as computational entities that operate by sending and receiving messages. Components are designed to process streams of data modeled as a series of messages which are exchanged asynchronously. Data streams are initiated over an asynchronous REST interface.", "title": "PyCon 2011: Large Scale Data Conditioning & Processing with Stackless Python and Pypes"},
{"date": "Mar 14, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-running-ultra-large-telescopes-in-python-4899204", "runtime": "23:07", "description": "Maciej Fija?kowski In this talk I would like to present the SKA (Square Kilometer Array) project in South Africa and how is it run. The main focus will be what the problem area is, how to handle high data-throughput in the telescope and how to make it all work in Python.", "title": "PyCon 2011: Running ultra large telescopes in Python"},
{"date": "Mar 14, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-how-to-write-obfuscated-python-4899191", "runtime": "26:46", "description": "Rev. Johnny Healey With its clean, highly readable syntax, Python would seem to be quite a challenge for a programmer attempting to write obfuscated code. Fortunately, it provides a wide variety of high-level abstractions that can be misused in exciting ways. This survey of obfuscation strategies will include topics such as decorator abuse, lambda calculus, and bytecode manipulation.", "title": "PyCon 2011: How to write obfuscated python"},
{"date": "Mar 14, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-scaling-python-past-100-4899197", "runtime": "28:49", "description": "Mark Ramm Sourceforge.net has been in the top 100 sites on the internet, and we discovered that python was easily able to scale up to handle that traffic. In fact Python is now the core language for all new features, and is taking over all of sourceforge.net.", "title": "PyCon 2011: Scaling Python past 100"},
{"date": "Mar 14, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-useful-namespaces-context-managers-and-decorators-4899206", "runtime": "24:45", "description": "Jack Diederich Python has two useful conventions for \"I mean it, but only here\" and you can say it with Context Managers and Decorators. Both give you the power to define a push/pop of a resource for a set period inside a namespace, be it a function or a level of indentation. This talk is a list of patterns that are implemented by one or the other (including some clever functions that are both).", "title": "PyCon 2011: Useful Namespaces: Context Managers and Decorators"},
{"date": "Mar 14, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-an-outsider-s-look-at-co-routines-4899200", "runtime": "25:14", "description": "Peter Portante Let's take an outsiders look at coroutines, the underlying concept used by greenlets. First we'll define what they are conceptually, and show some typical use cases. Then we'll take a look at a sampling of the implementations out there to see what they are actually doing to implement the concept. Finally, we'll show their pluses and minuses, and highlight some features of packages that use them.", "title": "PyCon 2011: An outsider's look at co-routines."},
{"date": "Mar 14, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-python-for-high-performance-computing-4899211", "runtime": "32:32", "description": "William Scullin Python is becoming increasingly popular within the high performance computing community. While it initially gained traction as a scripting language, Python's role has continued to expand with Python applications for science scaling to hundreds of thousands of cores and bindings to high performance libraries becoming commonplace. This talk is meant as an overview of Python's role in the HPC space.", "title": "PyCon 2011: Python for High Performance Computing"},
{"date": "Mar 14, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-testing-with-mock-4899484", "runtime": "33:22", "description": "Michael Foord mock is a Python testing library. It has the goal of making mocking in tests brain dead simple! mock provides the Mock class and the patch decorator for safely patching out the objects you are mocking in your tests. This talk will cover standard mocking patterns. We'll also look at some of the newer features in the latest release, including support for mocking magic methods.", "title": "PyCon 2011: Testing with mock"},
{"date": "Mar 14, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-an-open-success-for-the-cloud-openstack-4899478", "runtime": "22:24", "description": "Andy Smith, Core Developer - Openstack OpenStack is a collection of open source technologies written entirely in Python, delivering a massively scalable cloud operating system. OpenStack is currently developing two interrelated projects: OpenStack Compute and OpenStack Object Storage. OpenStack Compute is software to provision and manage large groups of virtual private servers, and OpenStack Object Storage is software for creating redundant, scalable object storage using clusters of commodity servers to store terabytes or even petabytes of data. This talk will go into details about the success of OpenStack with Python, limitations and how overall, Python was the right technology choice.", "title": "PyCon 2011: An Open success for the cloud: OpenStack"},
{"date": "Mar 13, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-mrjob-distributed-computing-for-everyone-4898987", "runtime": "27:47", "description": "Jimmy Retzlaff Have tons of data that needs analysis? Now it's as easy as 1-2-3! 1) Sign up for an Amazon Web Services account. 2) Install Yelp's mrjob. 3) Write as few as a dozen lines of Python code. This talk will show you how to use mrjob and Amazon's Elastic MapReduce to easily process lots of data in parallel on a potentially large cluster of computers that you can rent for a dime per computer per hour.", "title": "PyCon 2011: mrjob: Distributed Computing for Everyone"},
{"date": "Mar 13, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-continuous-deployment-4898971", "runtime": "26:51", "description": "Laurens Van Houtven This talk is about continuous deployment practices and tools, lessons learned from implementing it, and putting them into perspective. The goal is to give other people tips and pointers for applying these ideas themselves.", "title": "PyCon 2011: Continuous deployment"},
{"date": "Mar 13, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-getting-the-job-the-do-s-and-don-ts-of-landing-a-python-job-4898967", "runtime": "31:44", "description": "Brian Moloney AUDIO PROBLEMS FOR FIRST 5 MINS OF VIDEO Every Python programmer is brilliant in his or her own way. That brilliance shines in code and peer-to-peer conversation. But how do you display your skills to a non-programmer? How do you impress management and human resources? What do you need to do (and not do) to successfully navigate the hiring process and land the job?", "title": "PyCon 2011: Getting the job: the do's and don'ts of landing a Python job"},
{"date": "Mar 13, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-packaging-from-distutils-to-distutils2-4898961", "runtime": "33:52", "description": "Tarek Ziad\u00e9 Packaging or installing a Python application can be extremely painful. This talk will deep-dive into the new Distutils2 features and explain how you can use them in your project *today* to make life easier for everyone (users, OS package managers, developers, etc.).", "title": "PyCon 2011: Packaging, from Distutils to Distutils2"},
{"date": "Mar 13, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-swarming-the-web-evolving-the-perfect-config-file-4898981", "runtime": "26:56", "description": "Kurt Grandis Deployed web applications are typically run on top of stacks of highly configurable middleware. The number of tunable parameters and their impact are rarely fully explored. Using SciPy and a set of common Python-based web tools this session will present a new method of automatically tuning a typical LAMP stack for optimal performance.", "title": "PyCon 2011: Swarming the Web: Evolving the Perfect Config File"},
{"date": "Mar 13, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-ten-years-of-twisted-4898912", "runtime": "25:50", "description": "Glyph Lefkowitz The Twisted event-driven networking engine is well-known in the Python community. However, only a few of its features are widely understood. This talk will be a brief conceptual introduction to Twisted, followed by a survey of its features, their status, and how development has been proceeding over the years, with a special focus on the last two years of sponsored development.", "title": "PyCon 2011: Ten Years of Twisted"},
{"date": "Mar 13, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-the-python-that-wasn-t-4898977", "runtime": "25:48", "description": "Larry Hastings One reason for Python's success is its restraint in adding new language features. Only the most essential changes make it--and for every change that gets accepted, many more are rejected. Come learn about proposed changes to the Python language that failed--what, how, and why.", "title": "PyCon 2011: The Python That Wasn't"},
{"date": "Mar 14, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-exhibition-of-atrocity-4899139", "runtime": "27:21", "description": "Mike Pirnat Believe it or not, but you can write pretty horrendously awful code even in a language as elegant as Python. Over the years, I've committed my share of sins; now it's time to come clean. Step right up for a tour of twisted, evil, and downright wrong code, and learn some strategies to avoid writing criminally bad code--if you dare!", "title": "PyCon 2011: Exhibition of Atrocity"},
{"date": "Mar 13, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-writing-great-documentation-4899042", "runtime": "30:38", "description": "Jacob Kaplan-Moss Django\u2019s among the best documented open source projects; I'm intensely proud of that accomplishment. If any part of Django endures, I hope it\u2019ll be a \u201cdocumentation culture\u201d \u2014 an ethos that values great, well-written documentation. To that end, this talk looks at the tools, tips, and techniques I\u2019ve learned over the years. I hope it helps you write great documentation, too.", "title": "PyCon 2011: Writing great documentation"},
{"date": "Mar 13, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-the-data-structures-of-python-4898160", "runtime": "31:37", "description": "Alex Gaynor Any Python programmer knows about the major builtin data strcutres, lists, dicts, tuples, but do you always remember when you're supposed to use them? Do you know about all the cool data structures hidden in the standard library? This talk will be a review of the characteristics of the different data structures, and a tour of idiomatic ways to use some of the structures in the standard library.", "title": "PyCon 2011: The Data Structures of Python"},
{"date": "Mar 13, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-handling-ridiculous-amounts-of-data-with-probabilistic-data-structures-4899047", "runtime": "24:05", "description": "C. Titus Brown Part of my job as a scientist involves playing with rather large amounts of data (200 gb+). In doing so we stumbled across some neat CS techniques that scale well, and are easy to understand and trivial to implement. These techniques allow us to make some or many types of data analysis map-reducable. I'll talk about interesting implementation details, fun science, and neat computer science.", "title": "PyCon 2011: Handling ridiculous amounts of data with probabilistic data structures"},
{"date": "Mar 13, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-disqus-serving-400-million-people-with-python-4898303", "runtime": "18:33", "description": "David Cramer, Engineer - Disqus Jason Yan, CTO and Co-Founder of Disqus Disqus, one of the largest Python applications on the web, will explain how they deal with scaling complexities in a growing startup. Founded in 2007, Disqus maintains a small engineering team reaching over 400 million users a month. Being powered by Python has allowed quick iteration of the application, without sacrificing code quality and performance. The talk will cover key parts of the architecture and development process at Disqus, including hardware, databases, and common bottlenecks.", "title": "PyCon 2011: Disqus: Serving 400 million people with Python"},
{"date": "Mar 13, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-statistical-machine-learning-for-text-classification-with-scikit-learn-4898362", "runtime": "32:29", "description": "Olivier Grisel The goal of this talk is to give a state-of-the-art overview of machine learning algorithms applied to text classification tasks ranging from language and topic detection in tweets and web pages to sentiment analysis in consumer products reviews.", "title": "PyCon 2011: Statistical machine learning for text classification with scikit-learn"},
{"date": "Mar 13, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-what-would-you-do-with-an-ast-4898264", "runtime": "42:09", "description": "Matthew J Desmarais The ast module in the Python (>= 2.6) standard library provides a representation of python code in a python data structure. We'll begin with a discussion about what an abstract syntax tree is and why it's useful. We can then talk about what's available in the ast module, how it works, and how you can use it. This will be a practical session built around examples examining and modifying live ASTs.", "title": "PyCon 2011: What would you do with an ast?"},
{"date": "Mar 13, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-an-introduction-to-tornado-4898678", "runtime": "44:15", "description": "Gavin M. Roy Tornado is an open source version of the scalable, non-blocking web server and tools that power FriendFeed. It is not only a web server but it is a light-weight, use only what you need, web development framework. In this talk we will review the current state of the Tornado project, review the features Tornado provides and give examples of how to implement asynchronous web applications in Tornado.", "title": "PyCon 2011: An Introduction to Tornado"},
{"date": "Mar 13, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-using-blender-s-new-bpy-python-api-4898905", "runtime": "29:21", "description": "Christopher Allan Webber Blender 2.5 (a free and open source software 3d graphics suite) includes a new BPY python API which is usable for scripting modeling, animation, etc. Learn to use this API to speed up your workflow, create procedural graphics, and cool new tools.", "title": "PyCon 2011: Using Blender's new BPY Python API"},
{"date": "Mar 13, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-tuf-secure-software-updates-in-python-4898775", "runtime": "28:18", "description": "Geremy Condra From an attacker's point of view there are few entry points with as much to offer as a vulnerable software updater, yet history tells us that such vulnerabilities are common. In this talk we'll demonstrate a number of attacks, explain how common approaches fail to defend against them, and demonstrate a pure Python library (TUF) that provides both robust protection and extreme ease of use.", "title": "PyCon 2011: TUF: Secure Software Updates in Python"},
{"date": "Mar 13, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-rapid-python-used-on-big-data-to-discover-human-genetic-variation-4898693", "runtime": "21:26", "description": "Deniz Kural Advances in genome sequencing has enabled large-scale projects such as the 1000 Genomes Project to sequence genomes across diverse populations around the world, resulting in very large data sets. I use Python for rapid development of algorithms for processing & analyzing genomes and discovering thousands of new variants, including \"Mobile Elements\" that copy&paste themselves across the genome.", "title": "PyCon 2011: Rapid Python used on Big Data to Discover Human Genetic Variation"},
{"date": "Mar 13, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-get-new-contributors-and-diversity-through-outreach-4898684", "runtime": "31:25", "description": "Asheesh Laroia Groups like the Fedora Design Team, Dreamwidth, SF Ruby, and OpenHatch have discovered the power of outreach to bring in new contributors. In the past year, SF Ruby grew in numbers as well as in diversity, moving from 3% women to 18% women. Because most projects need ongoing help, this talk discusses effective strategies for bringing in contributors who stick around for the long haul.", "title": "PyCon 2011: Get new contributors (and diversity) through outreach"},
{"date": "Mar 13, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-python-and-robots-teaching-programming-in-high-school-4898767", "runtime": "50:08", "description": "Vern Ceder Combining Python with inexpensive robots is a very effective way of teaching programming at the middle and high school levels. Since Python is easy to understand a constructivist approach is possible - students learn by creating and running simple programs, observing the results, and then modifying their code to fix bugs and add functionality.", "title": "PyCon 2011: Python and Robots: Teaching Programming in High School"},
{"date": "Mar 13, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-zodb-a-python-persistence-system-4897373", "runtime": "34:23", "description": "Chris McDonough [[http://zodb.org|ZODB]] is a transactional persistence system written entirely in Python. This talk will serve as an introduction to using the ZODB in a Python application.", "title": "PyCon 2011: ZODB: A Python Persistence System"},
{"date": "Mar 13, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-couchdb-and-python-in-practice-4897385", "runtime": "28:40", "description": "Luke Gotszling This talk introduces one 'NoSQL' solution, CouchDB, and how to get it to play well with Python. Topics covered: * Introduction to CouchDB * A python ORM for CouchDB * Parsing CouchDB documents within python * Writing view functions in python * Map/reduce on CouchDB from python * Lessons learned from managing and distributing a live deployment at scale under high load", "title": "PyCon 2011: CouchDB and Python in practice"},
{"date": "Mar 13, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-how-to-kill-a-patent-with-python-4897800", "runtime": "37:26", "description": "Van Lindberg Finding the right piece of \"prior art\" - technical documentation that described a patented piece of technology before the patent was filed - is like finding a needle in a very big haystack. This session will talk about how I am making that process faster and more accurate through the use of natural language processing, graph theory, machine learning, and lots of Python.", "title": "PyCon 2011: How to kill a patent with Python"},
{"date": "Mar 13, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-why-is-python-slow-and-how-pypy-can-help-4897756", "runtime": "30:22", "description": "Alex Gaynor PyPy is a virtual machine for Python, featuring an advanced just in time compiler, which can deliver exceptional performance. This talk is going to be a deep dive into what exactly makes Python such a hard language to optimize, how PyPy is organized, and what optimizations our JIT can do (and what it can't do) for your code.", "title": "PyCon 2011: Why is Python slow and how PyPy can help?"},
{"date": "Mar 13, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-genetic-programming-in-python-4897741", "runtime": "43:27", "description": "Eric Floehr Did you know you can create and evolve programs that find solutions to problems? This talk walks through how to use Genetic Algorithms and Genetic Programming as tools to discover solutions to hard problems, when to use GA/GP, setting up the GA/GP environment, and interpreting the results. Using pyevolve, we'll walk through a real-world implementation creating a GP that predicts the weather.", "title": "PyCon 2011: Genetic Programming in Python"},
{"date": "Mar 13, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-backup-is-hard-let-s-go-shopping-4897842", "runtime": "33:41", "description": "Gary Bernhardt We'll fly through the most clever bits of BitBacker, an online backup app developed as a startup for three years and eventually abandoned. Highlights: a hacked-up httplib/asyncore HTTP client; a real-life, HATEOAS-respecting RESTful API, and an encryption scheme that can quickly diff a file system against the server while leaking no information \u2013 not even file timestamps.", "title": "PyCon 2011: Backup Is Hard; Let's Go Shopping"},
{"date": "Mar 13, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-deploying-applications-with-zc-buildout-4897770", "runtime": "30:06", "description": "JIm Fulton This talk described using zc.buildout for application deployment to production environments. It presents building self-contained source releases, and using these to create RPM distributions. It shows how to use buildout to configure services, including web servers, cron jobs, monitoring and so on. Finally, it presents ongoing efforts to deploy applications that span many machines.", "title": "PyCon 2011: Deploying Applications with zc.buildout"},
{"date": "Mar 13, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-through-the-side-channel-timing-and-implementation-attacks-in-python-4897955", "runtime": "31:11", "description": "Geremy Condra Python's dynamic nature, large standard library, and concern for beauty over performance make it an elegant and uniquely easy to use language, but they also cause some unique problems. In this talk we'll explore how features ranging from dictionaries to duck typing can become security risks, demonstrate those attacks on real Python projects, and examine how you can protect yourself and your code.", "title": "PyCon 2011: Through the Side Channel: Timing and Implementation Attacks in Python"},
{"date": "Mar 13, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-units-need-testing-too-4897973", "runtime": "34:42", "description": "Gary Bernhardt Python's long history of testing has focused primarily on integration- and system-level tests: slow-running tests executing lots of code. These are a great start, but many of them can be transformed into unit-level tests. True unit tests are orders of magnitude faster (about 1ms each), providing quicker feedback and better failure localization. We'll look at why and how to write them.", "title": "PyCon 2011: Units Need Testing Too"},
{"date": "Mar 13, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-panel-python-vms-4898043", "runtime": "44:03", "description": "Python is lucky enough to have a healthy ecosystem of virtual machines (VMs) exist. CPython, Jython, IronPython, and PyPy are all used extensively by people in real-world situations. This panel brings together a representative from each of the major VMs to discuss where they are now, going in the future, and to answer questions from the community.", "title": "PyCon 2011: Panel: Python VMs"},
{"date": "Mar 13, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-documentation-driven-development-4896872", "runtime": "28:53", "description": "Corey Oordt Developers usually leave documentation as a final step; one that they will get to as soon as they are forced with threats of bodily harm. Writing the documentation before writing the code, can lead to better code, better implementation and, of course, actual documentation.", "title": "PyCon 2011: Documentation Driven Development"},
{"date": "Mar 13, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-prototyping-go-s-select-with-stackless-py-for-stackless-python-4897026", "runtime": "25:08", "description": "Andrew Francis Showing how to use Python to prototype powerful concurrency features for Stackless Python. We do want you to try this at home.", "title": "PyCon 2011: Prototyping Go's Select with stackless.py for Stackless Python"},
{"date": "Mar 13, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-panel-python-in-schools-teaching-it-and-teaching-with-it-4897094", "runtime": "42:02", "description": "Joel Zachary Miller Jeffrey Elkner Vern Ceder Brian C. Brumley Maria Litvin Educators discuss Python as both a subject and a tool in primary and secondary (K12) education. Topics addressed include the distinction between teaching Python and teaching with Python, the benefits of Python in K12 and ways to demonstrate the value of Python to administrators. Panel includes private and public K12 educators and university faculty involved in instruction in the K12 setting.", "title": "PyCon 2011: Panel: Python in Schools: Teaching It and Teaching With It."},
{"date": "Mar 13, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-http-in-python-which-library-for-what-task-4896894", "runtime": "16:33", "description": "Augie Fackler HTTP is the lingua franca of the web, and many things done in Python depend on it, yet HTTP in Python isn't always as good as one would expect. It's well worth knowing the options and tradeoffs available.", "title": "PyCon 2011: HTTP in Python: which library for what task?"},
{"date": "Mar 13, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-opening-the-flask-4896892", "runtime": "35:33", "description": "Armin Ronacher After a year of the Flask microframework it's time to draw some conclusions, see things that went right and things that should be improved. The talk gives both an introduction into Flask itself as well as well as the ecosystem that evolved around it.", "title": "PyCon 2011: Opening the Flask"},
{"date": "Mar 13, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-supporting-all-versions-of-python-all-the-time-with-tox-4897155", "runtime": "21:52", "description": "Kumar McMillan This talk explains the modern techniques that every module maintainer needs to know in order to support all major versions of Python. You probably already have a massive test suite using a tool like nosetests, py.test, unittest, or a custom runner. Using the tox command line tool, you'll see how to run your tests in Python 2.x, 3.x, Jython, and whatever else in parallel.", "title": "PyCon 2011: Supporting All Versions of Python All The Time With Tox"},
{"date": "Mar 13, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-introduction-to-parallel-computing-on-an-nvidia-gpu-using-pycuda-4897140", "runtime": "30:30", "description": "Roy Hyunjin Han With Andreas Kl\u00f6ckner's PyCUDA, you can harness the massively parallel supercomputing power of your NVIDIA graphics card to crunch numerically intensive scientific computing applications in a fraction of the runtime it would take on a CPU and at a fraction of the development cost of C++. We'll cover hardware architecture, API fundamentals and several examples to get you started.", "title": "PyCon 2011: Introduction to Parallel Computing on an NVIDIA GPU using PyCUDA"},
{"date": "Mar 13, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-dude-where-s-my-ram-a-deep-dive-into-how-python-uses-memory-4896725", "runtime": "32:29", "description": "Dave Malcolm This talk will give a deep dive into how CPython uses memory. I'll be demonstrating a new tool I've written that analyses CPython's memory usage, and offer hints and tips on how you can reduce the memory footprint of your Python programs.", "title": "PyCon 2011: \"Dude, Where's My RAM?\" - A deep dive into how Python uses memory"},
{"date": "Mar 13, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-an-biased-survey-of-the-python-web-4897214", "runtime": "26:24", "description": "Mark Ramm I may be BDFL of one framework, but that's also why I pay attention to the whole ecosystem. From the release of Plone 4, TurboGears 2, Django 1.2 and Pylons 1 ,it's been an interesting year. And things like html5lib, an updated WSGI spec, and a contender for the next generation WSGI have all made things interesting. Come explore the wild and dynamic jungle that I call \"the python web toolkit.\"", "title": "PyCon 2011: An (biased) survey of the python web"},
{"date": "Mar 13, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-dependency-management-with-puppet-4897344", "runtime": "29:30", "description": "Richard Crowley Puppet is a configuration management tool that we'll learn to use the easy way. We'll introduce the Puppet language and the concept of resources like packages, files, shell commands, and more. We'll use Puppet to build our dev environment and deploy it to production servers.", "title": "PyCon 2011: Dependency management with Puppet"},
{"date": "Mar 13, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-the-development-of-python-and-you-4897328", "runtime": "43:43", "description": "Brian Curtin Have an inside look at what it takes to work on CPython, from getting setup with the source and navigating the bug tracker, to the best practices for having your work accepted. We'll find, categorize, and fix an issue in Python to get you started. This talk is ideal for those who are new to open source projects or are interested in the Python development process.", "title": "PyCon 2011: The Development of Python and You"},
{"date": "Mar 13, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-django-packages-a-case-study-4896742", "runtime": "31:30", "description": "Daniel Greenfeld Django Packages is the place to review Django apps, frameworks, and projects. This talk is for everyone, including non-Django users, and covers everything from architecture, API development, to interacting with PyPI, Github, Bitbucket, etc. It will include tools, lessons learned, and projects that fork the code to save the world and will finish with an overview of the forthcoming pypackages.com.", "title": "PyCon 2011: Django Packages: A Case Study"},
{"date": "Mar 13, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-supercomputer-and-cluster-application-performance-analysis-using-python-4896729", "runtime": "28:06", "description": "Daniel W. Barnette, PhD Sandia National Labs analyzes high-performance computing environments to optimize application performance, analyze system architectures, and provide design guidance for future systems. We discuss 1) generating performance data across multiple systems using mini-applications, and 2) using our open source Python tools Pylot/Co-Pylot to store and analyze data using a MySQL database server.", "title": "PyCon 2011: Supercomputer and Cluster Application Performance Analysis using Python"},
{"date": "Mar 13, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-extreme-network-programming-with-python-and-linux-4896737", "runtime": "37:22", "description": "Rob Ludwick Traditionally, C is the preferred language for low level network programming and works well for those who have the time and patience to work with it. As it turns out, Python is very capable for prototyping low level network code, collecting data, and testing ideas quickly without getting lost in the land of C.", "title": "PyCon 2011: Extreme Network Programming with Python and Linux"},
{"date": "Mar 13, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-python-aware-python-4896752", "runtime": "42:52", "description": "Ned Batchelder Python provides many features for introspecting, analyzing, parsing, compiling, and otherwise grokking Python code. This talk will cover a number of the techniques for writing Python-Aware Python, and will hopefully inspire you to build the next great Python tool.", "title": "PyCon 2011: Python-Aware Python"},
{"date": "Mar 13, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-api-design-anti-patterns-4896769", "runtime": "43:09", "description": "Alex Martelli Designing interfaces so that other code can interact with ours (whether our code is a library, framework, application, website...) is a very common and clearly crucial activity, but fraught with dangers -- stuff we all keep doing wrong time after time. This talks shows some common cases of API design errors encountered in the wild, with tips on how to avoid them when you design your next API.", "title": "PyCon 2011: API Design anti-patterns"},
{"date": "Mar 13, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-state-of-pylons-turbogears-2-repoze-bfg-4896763", "runtime": "46:16", "description": "Chris McDonough Ben Bangert Mark Ramm A three-for-one talk by the main developers of three popular Python web frameworks! We'll (very) briefly cover the state of each of our individual frameworks and communities, and then we'll describe the results of our efforts to work together and share code.", "title": "PyCon 2011: State of Pylons/TurboGears 2/repoze.bfg"},
{"date": "Mar 12, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-using-python-to-debug-c-and-c-code-using-gdb-4895525", "runtime": "32:56", "description": "Dave Malcolm Got a difficult C/C++ program to debug? The power of Python is now available from within the GNU debugger. I'll show how you can use simple fragments of Python to quickly track down fiddly bugs in C/C++ code. We'll also see how to use Python to extend gdb with new commands and new ways of visualizing the internal state of a program.", "title": "PyCon 2011: Using Python to debug C and C++ code (using gdb)"},
{"date": "Mar 13, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-serious-business-python-is-not-just-for-engineering-4896772", "runtime": "16:16", "description": "Zach Steindler Building a great business is quite different from building a great product, but by measuring Key Performance Indicators (things like cash flow, if users keep coming back, etc.) you can make sure your business is on the right track. In this talk I'll cover common KPI in the tech business and show you how we automate collecting and presenting KPI at Olark.", "title": "PyCon 2011: Serious Business: Python is not just for Engineering"},
{"date": "Mar 13, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-using-python-3-to-build-a-cloud-computing-service-for-my-superboard-ii-4896844", "runtime": "45:11", "description": "David Beazley The OSI Superboard II was the computer on which I first learned to program back in 1979. Python is why programming remains fun today. In this tale of old meets new, I describe how I have used Python 3 to create a cloud computing service for my still-working Superboard--a problem complicated by it only having 8Kb of RAM and 300-baud cassette tape audio ports for I/O.", "title": "PyCon 2011: Using Python 3 to Build a Cloud Computing Service for my Superboard II"},
{"date": "Mar 12, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-creating-complex-data-pipelines-in-the-cloud-the-app-engine-pipeline-api-4895531", "runtime": "34:59", "description": "Brett Slatkin This talk will cover App Engine's new Pipeline API, which connects together complex, time-consuming work (including MapReduces and human actions) in a distributed system. The API transforms Python into an asynchronous language for describing data dependencies in a novel way. We will discuss how the API works, how it achieves parallelism, and how to reuse its design and code outside of App Engine.", "title": "PyCon 2011: Creating Complex Data Pipelines in the Cloud: The App Engine Pipeline API"},
{"date": "Mar 13, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-advanced-network-architectures-with-zeromq-4896861", "runtime": "27:15", "description": "Zed A. Shaw In this talk I will demonstrate how to use ZeroMQ with Python (and others) to do really advanced or even weird network architectures. You'll see Python talk to other languages, handle HTTP, JSON, XML, WebSockets, encode videos, chat messaging, etc. All in a short talk with only code, no diagrams. You should know ZeroMQ already.", "title": "PyCon 2011: Advanced Network Architectures With ZeroMQ"},
{"date": "Mar 12, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-mobile-applications-testing-using-python-an-experimental-technique-4895544", "runtime": "32:15", "description": "Eing Ong This session presents an experimental approach that uses mobile simulators - BlackBerry\u2122 and Android\u2122 to run automated end-to-end tests using the Python\u2122 programming language. We\u2019ll walk through the testing process - from the basics of interacting with both device simulators, writing reusable tests on both these devices and executing these tests in PyUnit. Sample code is included.", "title": "PyCon 2011: Mobile applications testing using Python - an experimental technique"},
{"date": "Mar 12, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-supporting-cpython-on-unsupported-platforms-4895539", "runtime": "31:21", "description": "Tim Lesher How do you manage a custom fork of Python for an unsupported OS running on custom hardware? That was the question at Vocollect, where we use Python on our wearable, voice-controlled computers. In this talk, I'll discuss how we did it, describe the problems and roadblocks we found, and show how we're managing our use of Python through 3.2 and beyond.", "title": "PyCon 2011: Supporting CPython on Unsupported Platforms"},
{"date": "Mar 12, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-python-software-foundation-chairman-address-4895586", "runtime": "11:59", "description": "Steve Holden Steve Holden summarizes the last year for the Python Software Foundation and indicates future directions.", "title": "PyCon 2011: Python Software Foundation Chairman Address"},
{"date": "Mar 13, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-how-dropbox-did-it-and-how-python-helped-4896698", "runtime": "31:42", "description": "Rian Hunter, Engineer - Dropbox Dropbox is a startup company located in San Francisco that has probably one of the most popular file synchronization and sharing tools in the world, shipping Python on the desktop and supporting millions of users and growing every day. Dropbox uses Python on the client-side and server side as well. This talk will give an overview of the first two years of Dropbox, the team formation, our early guiding principles and philosophies, what worked for us and what we learned while building the company and engineering infrastructure. It will also cover why Python was essential to the success of the project and the rough edges we had to overcome to make it our long term programming environment and runtime. Finally it will give some insight into the future of Dropbox and where the project is going.", "title": "PyCon 2011: How Dropbox Did It and How Python Helped"},
{"date": "Mar 13, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-a-fireside-chat-with-guido-van-rossum-4896703", "runtime": "38:27", "description": "In this interview style keynote, we will explore the mind of Python's creator and benevolent dictator - subjecting him to the \"comfy chair\" as well as questions from the community (picked and voted on by the community) as well as questions from the audience. This will be a guided, but informal talk - you can submit questions for the BDFL here: http://goo.gl/mod/qSW7 Guido van Rossum is the author of the Python programming language. He continues to serve as the \"Benevolent Dictator For Life\" (BDFL), meaning that he continues to oversee the Python development process, making decisions where necessary. He is currently employed by Google. When asked about this talk; the only response the BDFL was able to produce was \"Not... THE CUSHIONS!\"", "title": "PyCon 2011: A Fireside chat with Guido van Rossum"},
{"date": "Mar 13, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-keynote-hilary-mason-4896686", "runtime": "31:04", "description": "Hilary is the lead scientist at bit.ly, where she is finding sense in vast data sets. She is a former computer science professor with a background in machine learning and data mining, has published numerous academic papers, and regularly releases code on her personal site, http://www.hilarymason.com/. She has discovered two new species, loves to bake cookies, and asks way too many questions.", "title": "PyCon 2011: Keynote: Hilary Mason"},
{"date": "Mar 12, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-wsgi-working-together-to-solve-the-web-s-problems-4895590", "runtime": "31:43", "description": "Christopher Perkins THIS TALK WAS CHANGED TO A PANEL: Brandon Rhodes Robert Brewer Mark Ramm Ian Bicking Graham Dumpleton Armin Ronacher Alice Bevan-Mcgregor", "title": "PyCon 2011: WSGI: Working together to solve the web's problems"},
{"date": "Mar 13, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-distributed-tasks-with-celery-4896722", "runtime": "31:45", "description": "Ryan Petrello Celery is an open source task queueing system based on distributed message passing, especially using the AMQP protocol. This talk will focus on the need for task distribution, the tools celery provides to meet those needs, and an in-depth discussion of how we've used celery at ShootQ to improve the efficiency and reliability of our background processes.", "title": "PyCon 2011: Distributed Tasks with Celery"},
{"date": "Mar 17, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-introduction-to-unittest-a-k-a-pyunit-96-3379016", "runtime": "26:33", "description": "Speaker prefered not to be taped, VGA output only", "title": "PyCon 2010:Introduction to unittest (a.k.a. PyUnit) (#96)"},
{"date": "Mar 17, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-modern-version-control-mercurial-internals-113-3379013", "runtime": "30:28", "description": "", "title": "PyCon 2010:Modern version control: Mercurial internals (#113)"},
{"date": "Mar 17, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-dealing-with-unsightly-data-in-the-real-world-156-3379006", "runtime": "22:59", "description": "", "title": "PyCon 2010:Dealing with unsightly data in the real world. (#156)"},
{"date": "Mar 17, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-hg-and-git-can-t-we-all-just-get-along-154-3379011", "runtime": "31:32", "description": "", "title": "PyCon 2010:Hg and Git : Can't we all just get along? (#154)"},
{"date": "May 17, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/django-deployment-workshop-3651591", "runtime": "03:09:47", "description": "", "title": "Django Deployment Workshop"},
{"date": "Mar 17, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-teaching-compilers-with-python-87-3379007", "runtime": "25:55", "description": "", "title": "PyCon 2010:Teaching compilers with python (#87)"},
{"date": "Mar 17, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-remixing-music-pythonically-157-3379008", "runtime": "22:16", "description": "", "title": "PyCon 2010:Remixing Music Pythonically (#157)"},
{"date": "May 17, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/introduction-to-traits-3652288", "runtime": "03:06:56", "description": "", "title": "Introduction to Traits"},
{"date": "Mar 12, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-sunday-afternoon-lightning-talks-4895508", "runtime": "35:32", "description": "", "title": "PyCon 2011: Sunday Afternoon Lightning Talks"},
{"date": "Mar 17, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-implementing-domain-specific-languages-in-python-3378792", "runtime": "03:04:47", "description": "", "title": "PyCon 2010:Implementing Domain Specific Languages In Python"},
{"date": "Mar 12, 2011", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-porting-to-python-3-4895521", "runtime": "45:30", "description": "Lennart Regebro A look at the strategies for porting to Python 3, and a quick look of the most common problems.", "title": "PyCon 2011: Porting to Python 3"},
{"date": "Mar 17, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-introduction-to-internet-programming-3378814", "runtime": "02:57:10", "description": "", "title": "PyCon 2010:Introduction to Internet Programming"},
{"date": "Mar 17, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-the-meaty-parts-of-python-closures-decorators-list-comprehension-and-functional-constructs-3378915", "runtime": "01:55:15", "description": "", "title": "PyCon 2010:The Meaty Parts of Python: Closures, Decorators, List Comprehension, and Functional Constructs"},
{"date": "Mar 17, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-relational-database-applications-3378800", "runtime": "02:09:11", "description": "", "title": "PyCon 2010:Relational Database Applications"},
{"date": "Mar 17, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-creating-rich-client-applications-using-dabo-3378833", "runtime": "03:05:24", "description": "", "title": "PyCon 2010:Creating Rich Client Applications Using Dabo"},
{"date": "Mar 17, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-documenting-your-project-with-sphinx-3378959", "runtime": "02:58:34", "description": "", "title": "PyCon 2010:Documenting Your Project With Sphinx"},
{"date": "Mar 17, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-rapid-multi-purpose-testing-81-3379003", "runtime": "30:11", "description": "", "title": "PyCon 2010:rapid multi-purpose testing (#81)"},
{"date": "Mar 17, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-advanced-sql-alchemy-3378995", "runtime": null, "description": "", "title": "PyCon 2010:Advanced SQL Alchemy"},
{"date": "Mar 17, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-customizing-your-editor-for-maximum-productivity-171-3379000", "runtime": "30:41", "description": "", "title": "PyCon 2010:Customizing your editor for maximum productivity (#171)"},
{"date": "Mar 17, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-eventlet-asynchronous-i-o-with-a-synchronous-interface-141-3379001", "runtime": "30:39", "description": "", "title": "PyCon 2010:Eventlet: Asynchronous I/O with a synchronous interface (#141)"},
{"date": "Mar 17, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-py-test-rapid-testing-with-minimal-effort-3378672", "runtime": "03:11:28", "description": "", "title": "PyCon 2010:py.test - Rapid Testing with Minimal Effort"},
{"date": "Mar 17, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-introduction-to-django-3378744", "runtime": "03:08:46", "description": "break is from 1:33 to ... they never turned the mic back on. :( http://us.pycon.org/2010/tutorials/ganesan_django/", "title": "PyCon 2010:Introduction to Django"},
{"date": "Mar 11, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-sunday-afternoon-lightning-talks-3352198", "runtime": "56:42", "description": "", "title": "PyCon 2010:Sunday Afternoon Lightning Talks"},
{"date": "Mar 11, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-sunday-morning-lightning-talks-3352194", "runtime": "31:39", "description": "", "title": "PyCon 2010:Sunday Morning Lightning Talks"},
{"date": "Mar 17, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-scaling-python-webapps-from-zero-to-50-million-users-a-top-down-approach-134-3378673", "runtime": "25:22", "description": "", "title": "PyCon 2010:Scaling Python webapps from zero to 50 million users - A top-down approach. (#134)"},
{"date": "Mar 17, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-python-102-3378685", "runtime": "02:33:47", "description": "", "title": "PyCon 2010:Python 102"},
{"date": "Mar 17, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-scrape-the-web-strategies-for-programming-websites-that-don-t-expected-it-3378693", "runtime": "02:51:20", "description": "", "title": "PyCon 2010:Scrape the Web: Strategies for programming websites that don't expected it"},
{"date": "Mar 17, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-wxpython-i-3378755", "runtime": "02:38:34", "description": "", "title": "PyCon 2010:wxPython I"},
{"date": "Mar 11, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-threading-is-not-a-model-187-3352177", "runtime": "37:58", "description": "", "title": "PyCon 2010:Threading is not a model (#187)"},
{"date": "Mar 17, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-introduction-to-sqlalchemy-3378777", "runtime": "02:48:15", "description": "", "title": "PyCon 2010:Introduction to SQLAlchemy"},
{"date": "Mar 11, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-keynote-cadence-quality-and-design-3352168", "runtime": "28:35", "description": "", "title": "PyCon 2010:Keynote: Cadence, Quality and Design"},
{"date": "Mar 17, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-python-201-how-to-solve-it-using-python-3378772", "runtime": "03:20:21", "description": "Some missing sections of video due to technical issues (approx 3 mins in).", "title": "PyCon 2010:Python 201: How to Solve It Using Python"},
{"date": "Mar 11, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-powering-the-real-time-web-with-python-pubsubhubbub-on-app-engine-173-3352171", "runtime": "29:16", "description": "", "title": "PyCon 2010:Powering the real-time web with Python: PubSubHubbub on App Engine (#173)"},
{"date": "Mar 11, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-persistent-graphs-in-python-with-neo4j-140-3352170", "runtime": "33:16", "description": "", "title": "PyCon 2010:Persistent Graphs in Python with Neo4j (#140)"},
{"date": "Mar 11, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-keynote-state-of-pypy-3352180", "runtime": "06:20", "description": "", "title": "PyCon 2010:Keynote: State of PyPy"},
{"date": "Mar 11, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-how-python-turbogears-and-mongodb-are-transforming-sourceforge-net-47-3352175", "runtime": "24:44", "description": "", "title": "PyCon 2010:How Python, TurboGears, and MongoDB are Transforming SourceForge.net (#47)"},
{"date": "Mar 11, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-ply-and-pyparsing-93-3352187", "runtime": "32:01", "description": "", "title": "PyCon 2010:PLY and PyParsing (#93)"},
{"date": "Mar 11, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-python-3-the-next-generation-48-3352135", "runtime": "29:09", "description": "", "title": "PyCon 2010:Python 3: The Next Generation (#48)"},
{"date": "Mar 11, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-cooperative-multitasking-with-twisted-getting-things-done-concurrently-11-3352182", "runtime": "28:01", "description": "Picture out of focus at the beginning", "title": "PyCon 2010:Cooperative Multitasking with Twisted: Getting Things Done Concurrently. (#11)"},
{"date": "Mar 11, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-keynote-state-of-unladen-swallow-3352188", "runtime": "06:13", "description": "", "title": "PyCon 2010:Keynote: State of Unladen Swallow"},
{"date": "Mar 11, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-keynote-relentlessly-pursuing-opportunities-with-python-or-why-the-ais-will-spare-us-all-3352191", "runtime": "31:46", "description": "", "title": "PyCon 2010:Keynote: Relentlessly Pursuing Opportunities With Python, or why the AIs will Spare Us All!"},
{"date": "Mar 11, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-how-are-large-applications-embedding-python-6-3352140", "runtime": "29:29", "description": "", "title": "PyCon 2010:How Are Large Applications Embedding Python? (#6)"},
{"date": "Mar 11, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-how-does-enthought-distribute-packages-108-3352143", "runtime": "33:05", "description": "Frezz frame in the start of the video", "title": "PyCon 2010:How does Enthought distribute packages? (#108)"},
{"date": "Mar 11, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-powerful-pythonic-patterns-186-3352151", "runtime": "45:03", "description": "", "title": "PyCon 2010:Powerful Pythonic Patterns (#186)"},
{"date": "Mar 11, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-the-mighty-dictionary-55-3352147", "runtime": "30:50", "description": "", "title": "PyCon 2010:The Mighty Dictionary (#55)"},
{"date": "Mar 11, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-keynote-state-of-cpython-3352160", "runtime": "43:11", "description": "", "title": "PyCon 2010:Keynote: State of CPython"},
{"date": "Mar 11, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-vistrails-a-python-based-scientific-workflow-and-provenance-system-172-3352146", "runtime": "31:16", "description": "", "title": "PyCon 2010:VisTrails: A Python-Based Scientific Workflow and Provenance System (#172)"},
{"date": "Mar 11, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-using-python-to-create-robotic-simulations-for-planetary-exploration-159-3352164", "runtime": "31:19", "description": "", "title": "PyCon 2010:Using Python to Create Robotic Simulations for Planetary Exploration (#159)"},
{"date": "Mar 11, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-the-zen-of-cherrypy-111-3352128", "runtime": "32:59", "description": "", "title": "PyCon 2010:The Zen of CherryPy (#111)"},
{"date": "Mar 11, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-cross-platform-application-development-and-distribution-116-3352165", "runtime": "29:39", "description": "", "title": "PyCon 2010:Cross platform application development and distribution (#116)"},
{"date": "Mar  9, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-keynote-building-the-python-community-3341672", "runtime": "13:45", "description": "", "title": "PyCon 2010:Keynote: Building the Python Community"},
{"date": "Mar  9, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-python-101-3341700", "runtime": "02:23:12", "description": "", "title": "PyCon 2010:Python 101"},
{"date": "Mar  9, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-hacking-the-social-web-with-python-3341706", "runtime": "02:48:47", "description": "", "title": "PyCon 2010:Hacking the Social Web with Python"},
{"date": "Mar  9, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-introduction-to-twisted-3341720", "runtime": "03:16:13", "description": "", "title": "PyCon 2010:Introduction to Twisted"},
{"date": "Mar  9, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-mastering-python-3-i-o-3341679", "runtime": "01:20:16", "description": "", "title": "PyCon 2010:Mastering Python 3 I/O"},
{"date": "Mar  9, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-to-relate-or-not-to-relate-that-is-the-question-99-3341721", "runtime": "32:28", "description": "", "title": "PyCon 2010:To relate or not to relate, that is the question (#99)"},
{"date": "Mar 11, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/frank-talks-3352114", "runtime": "19:32", "description": "Frank talking about the virtues of Common Lisp.", "title": "Frank Talks"},
{"date": "Mar 11, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-the-state-of-packaging-63-3352117", "runtime": "41:51", "description": "", "title": "PyCon 2010:The state of Packaging (#63)"},
{"date": "Mar  9, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-wxpython-ii-introduction-to-gui-programming-and-mvc-3341688", "runtime": "02:54:47", "description": "", "title": "PyCon 2010:wxPython II: Introduction to GUI Programming and MVC"},
{"date": "Mar 11, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-python-for-large-astronomical-data-reduction-and-analysis-systems-107-3352123", "runtime": "27:08", "description": "", "title": "PyCon 2010:Python for Large Astronomical Data Reduction and Analysis Systems (#107)"},
{"date": "Feb 24, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-testing-websites-with-python-and-selenium-3284004", "runtime": "01:55:03", "description": "Audio interference throughout talk", "title": "PyCon 2010:Testing Websites With Python and Selenium"},
{"date": "Mar  9, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-analysis-the-other-kind-of-testing-185-3341045", "runtime": "29:21", "description": "", "title": "PyCon 2010:Analysis: The other kind of testing (#185)"},
{"date": "Feb 24, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-data-storage-in-python-an-overview-of-options-3283555", "runtime": "02:44:13", "description": "Audio interference throughout talk", "title": "PyCon 2010:Data Storage in Python - An Overview of Options"},
{"date": "Feb 24, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-saturday-morning-lightning-talks-3283466", "runtime": "29:32", "description": "Saturday morning lightning talks, talks with Mark Shuttleworth", "title": "PyCon 2010:Saturday Morning Lightning talks"},
{"date": "Feb 24, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-plenary-introduction-and-welcome-3283426", "runtime": "29:40", "description": "", "title": "PyCon 2010:Plenary: Introduction and Welcome"},
{"date": "Feb 24, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-pay-only-for-what-you-eat-a-tour-of-the-repoze-bfg-repository-and-philosophy-174-3283384", "runtime": "28:23", "description": "", "title": "PyCon 2010:Pay only for what you eat: A tour of the Repoze.BFG repository and philosophy (#174)"},
{"date": "Mar  9, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-faster-python-programs-through-optimization-3341649", "runtime": "02:56:36", "description": "", "title": "PyCon 2010:Faster Python Programs Through Optimization"},
{"date": "Mar  9, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-django-in-depth-3341665", "runtime": "02:51:01", "description": "Cam frezz from time to time", "title": "PyCon 2010:Django in Depth"},
{"date": "Mar  9, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-plenary-intro-to-sprints-3341667", "runtime": "23:09", "description": "", "title": "PyCon 2010:Plenary: Intro to sprints"},
{"date": "Mar  9, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-keynote-state-of-jython-3341668", "runtime": "08:04", "description": "", "title": "PyCon 2010:Keynote: State of Jython"},
{"date": "Feb 24, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-panel-form-generator-generators-20-3283160", "runtime": "41:30", "description": "Feedback galore when moving between mics, cover your ears", "title": "PyCon 2010:Panel: Form Generator Generators (#20)"},
{"date": "Feb 24, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-keynote-state-of-ironpython-3282786", "runtime": "11:39", "description": "", "title": "PyCon 2010:Keynote: State of IronPython"},
{"date": "Feb 24, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-dude-where-s-my-database-133-3282913", "runtime": "36:30", "description": "", "title": "PyCon 2010:Dude, Where's My Database? (#133)"},
{"date": "Feb 24, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-creating-restful-web-services-with-restish-17-3280895", "runtime": "47:40", "description": "", "title": "PyCon 2010:Creating RESTful Web services with restish (#17)"},
{"date": "Feb 24, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-a-long-pinax-tutorial-3283177", "runtime": "02:26:21", "description": "Audio clipping at times", "title": "PyCon 2010:A Long Pinax Tutorial"},
{"date": "Feb 24, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-pynie-python-3-on-parrot-148-3283217", "runtime": "02:08:43", "description": "", "title": "PyCon 2010:Pynie: Python 3 on Parrot (#148)"},
{"date": "Feb 24, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-optimal-resource-allocation-using-python-36-3282999", "runtime": "24:42", "description": "Audio buzzing", "title": "PyCon 2010:Optimal Resource Allocation using Python (#36)"},
{"date": "Feb 24, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-simulating-network-devices-with-python-79-3283288", "runtime": "31:29", "description": "Reason for late start: no sound, first minute the sound is buzzing. Distracting echo throughout talk.", "title": "PyCon 2010:Simulating network devices with Python (#79)"},
{"date": "Feb 24, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-new-and-improved-coming-changes-to-unittest-the-standard-library-test-framework-52-3283307", "runtime": "29:39", "description": "", "title": "PyCon 2010:New *and* Improved: Coming changes to unittest, the standard library test framework (#52)"},
{"date": "Feb 24, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-how-to-compile-python-x86-assembly-the-python-way-3283367", "runtime": "03:10:17", "description": "", "title": "PyCon 2010:How to Compile Python x86 Assembly, the Python Way"},
{"date": "Feb 24, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-plenary-sautrday-evening-lightning-talks-3280702", "runtime": "42:14", "description": "", "title": "PyCon 2010:Plenary: Sautrday Evening Lightning Talks"},
{"date": "Feb 24, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-diversity-as-a-dependency-49-3280715", "runtime": "42:34", "description": "", "title": "PyCon 2010:Diversity as a Dependency (#49)"},
{"date": "Feb 24, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-tests-and-testability-188-3280697", "runtime": "31:25", "description": "", "title": "PyCon 2010:Tests and Testability (#188)"},
{"date": "Feb 24, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-python-in-quantitative-finance-158-3280756", "runtime": "29:35", "description": "", "title": "PyCon 2010:Python in quantitative finance (#158)"},
{"date": "Feb 24, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-mastering-team-play-four-powerful-examples-of-composing-python-tools-184-3280720", "runtime": "49:07", "description": "", "title": "PyCon 2010:Mastering Team Play: Four powerful examples of composing Python tools (#184)"},
{"date": "Feb 24, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-using-django-in-non-standard-ways-135-3280762", "runtime": "30:50", "description": "", "title": "PyCon 2010:Using Django in Non-Standard Ways (#135)"},
{"date": "Feb 24, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-easy-command-line-applications-with-cmd-and-cmd2-153-3280763", "runtime": "31:44", "description": "", "title": "PyCon 2010:Easy command-line applications with cmd and cmd2 (#153)"},
{"date": "Feb 24, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-python-metaprogramming-64-3280779", "runtime": "34:59", "description": "", "title": "PyCon 2010:Python Metaprogramming (#64)"},
{"date": "Feb 24, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-evolving-your-framework-under-fire-150-3280774", "runtime": "27:18", "description": "", "title": "PyCon 2010:Evolving Your Framework Under Fire (#150)"},
{"date": "Feb 24, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-designing-to-scale-the-story-of-shootq-5-3280769", "runtime": "32:57", "description": "", "title": "PyCon 2010:Designing to Scale: The Story of ShootQ (#5)"},
{"date": "Feb 24, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-what-we-ve-learned-from-building-basie-85-3280420", "runtime": "39:41", "description": "", "title": "PyCon 2010:What We've Learned From Building Basie (#85)"},
{"date": "Feb 24, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-learning-hosting-best-practices-from-webfaction-57-3280618", "runtime": "36:01", "description": "Audio slightly clipping", "title": "PyCon 2010:Learning Hosting Best-Practices From WebFaction (#57)"},
{"date": "Feb 24, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-ironpython-tooling-67-3280536", "runtime": "16:52", "description": "", "title": "PyCon 2010:IronPython Tooling (#67)"},
{"date": "Feb 24, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-debating-til-dawn-topics-to-keep-you-up-all-night-183-3280641", "runtime": "22:16", "description": "", "title": "PyCon 2010:Debating 'til Dawn: Topics to keep you up all night (#183)"},
{"date": "Feb 24, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-advanced-string-formatting-117-3280597", "runtime": "25:53", "description": "", "title": "PyCon 2010:Advanced String Formatting (#117)"},
{"date": "Feb 24, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-how-and-why-python-is-being-used-to-by-the-military-to-model-real-world-battlefield-scenarios-13-3280548", "runtime": "23:06", "description": "High pitched noise on audio", "title": "PyCon 2010:How and why Python is being used to by the Military to model real-world battlefield scenarios (#13)"},
{"date": "Feb 24, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-unladen-swallow-fewer-coconuts-faster-python-73-3280595", "runtime": "33:34", "description": "", "title": "PyCon 2010:Unladen Swallow: fewer coconuts, faster Python (#73)"},
{"date": "Feb 24, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-how-to-write-cross-interpreter-python-programs-101-3280685", "runtime": "15:22", "description": "", "title": "PyCon 2010:How to write cross-interpreter Python programs (#101)"},
{"date": "Feb 24, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-what-every-developer-should-know-about-database-scalability-21-3280648", "runtime": "44:48", "description": "", "title": "PyCon 2010:What every developer should know about database scalability (#21)"},
{"date": "Feb 24, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-508-and-you-taking-the-pain-out-of-accessibility-119-3280663", "runtime": "36:30", "description": "", "title": "PyCon 2010:508 and You: Taking the Pain out of Accessibility (#119)"},
{"date": "Feb 23, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-small-acts-make-great-revolutions-crafting-python-and-open-source-communities-in-rio-de-janeiro-78-3279230", "runtime": "28:17", "description": "", "title": "PyCon 2010:Small acts make great revolutions: crafting Python and Open Source communities in Rio de Janeiro (#78)"},
{"date": "Feb 23, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-maximize-your-program-s-laziness-58-3279171", "runtime": "30:19", "description": "", "title": "PyCon 2010:Maximize your program's laziness (#58)"},
{"date": "Feb 23, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-why-not-run-all-your-tests-all-the-time-a-study-of-continuous-integration-systems-160-3279219", "runtime": "32:07", "description": "", "title": "PyCon 2010:Why not run all your tests all the time? A study of continuous integration systems. (#160)"},
{"date": "Feb 23, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-extending-java-applications-with-jython-65-3279146", "runtime": "30:17", "description": "", "title": "PyCon 2010:Extending Java Applications with Jython (#65)"},
{"date": "Feb 23, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-turtles-all-the-way-down-demystifying-deferreds-decorators-and-declarations-169-3279223", "runtime": "38:44", "description": "", "title": "PyCon 2010:Turtles All The Way Down: Demystifying Deferreds, Decorators, and Declarations (#169)"},
{"date": "Feb 23, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-an-underwater-python-tortuga-the-python-powered-robot-175-3279169", "runtime": "22:15", "description": "", "title": "PyCon 2010:An Underwater Python: Tortuga the Python Powered Robot (#175)"},
{"date": "Feb 23, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-deconstruction-of-an-object-62-3279202", "runtime": "42:35", "description": "", "title": "PyCon 2010:Deconstruction of an Object (#62)"},
{"date": "Feb 23, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-think-globally-hack-locally-teaching-python-in-your-community-122-3279235", "runtime": "32:11", "description": "", "title": "PyCon 2010:Think Globally, Hack Locally - Teaching Python in Your Community (#122)"},
{"date": "Feb 23, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-the-ring-of-python-189-3279265", "runtime": "46:47", "description": "", "title": "PyCon 2010:The Ring of Python (#189)"},
{"date": "Feb 23, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-optimizations-and-micro-optimizations-in-cpython-38-3279255", "runtime": "23:35", "description": "Audio interference", "title": "PyCon 2010:Optimizations And Micro-Optimizations In CPython (#38)"},
{"date": "Feb 23, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-building-leafy-chat-djangodose-and-hurricane-lessons-learned-on-the-real-time-web-with-python-24-3279018", "runtime": "25:46", "description": "", "title": "PyCon 2010:Building Leafy Chat, DjangoDose, and Hurricane, Lessons Learned on the Real-Time Web with Python (#24)"},
{"date": "Feb 23, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-demystifying-non-blocking-and-asynchronous-i-o-164-3279083", "runtime": "29:41", "description": "", "title": "PyCon 2010:Demystifying Non-Blocking and Asynchronous I/O (#164)"},
{"date": "Feb 23, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-ecommerce-in-python-introduction-to-satchmo-and-getpaid-146-3279058", "runtime": "46:22", "description": "", "title": "PyCon 2010:Ecommerce in Python: Introduction to Satchmo and GetPaid (#146)"},
{"date": "Feb 23, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-a-short-pinax-tutorial-15-3279027", "runtime": "20:55", "description": "Due to technical problems, it was not possible to capture the output from the laptop.", "title": "PyCon 2010:A Short Pinax Tutorial (#15)"},
{"date": "Feb 23, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-the-speed-of-pypy-83-3279075", "runtime": "27:09", "description": "", "title": "PyCon 2010:The speed of PyPy (#83)"},
{"date": "Feb 23, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-the-python-and-the-elephant-large-scale-natural-language-processing-with-nltk-and-dumbo-120-3279057", "runtime": "49:12", "description": "", "title": "PyCon 2010:The Python and the Elephant: Large Scale Natural Language Processing with NLTK and Dumbo (#120)"},
{"date": "Feb 23, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-how-python-is-guiding-infrastructure-construction-in-africa-84-3279041", "runtime": "26:27", "description": "", "title": "PyCon 2010:How Python is guiding infrastructure construction in Africa (#84)"},
{"date": "Feb 23, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-writing-books-using-python-and-open-source-software-40-3279088", "runtime": "36:20", "description": "", "title": "PyCon 2010:Writing Books using Python and Open Source Software (#40)"},
{"date": "Feb 23, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-internationalizing-your-django-project-74-3279116", "runtime": "29:51", "description": "", "title": "PyCon 2010:Internationalizing your Django project (#74)"},
{"date": "Feb 23, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-sprox-data-driven-web-development-137-3279139", "runtime": "24:28", "description": "", "title": "PyCon 2010:Sprox: data driven web development (#137)"},
{"date": "Feb 23, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-supercharging-web-communications-integrating-python-based-apps-with-salesforce-com-crm-152-3276938", "runtime": "28:27", "description": "", "title": "PyCon 2010:Supercharging Web Communications: Integrating Python-based Apps with Salesforce.com CRM (#152)"},
{"date": "Feb 23, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-import-this-that-and-the-other-thing-custom-importers-9-3278926", "runtime": "34:54", "description": "", "title": "PyCon 2010:Import this, that, and the other thing: custom importers (#9)"},
{"date": "Feb 23, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-managing-the-world-s-oldest-django-project-80-3277074", "runtime": "36:31", "description": "", "title": "PyCon 2010:Managing the world's oldest Django project (#80)"},
{"date": "Feb 23, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-cooperative-multitasking-with-twisted-getting-things-done-concurrently-11-3277759", "runtime": "28:01", "description": "Picture out of focus at the beginning", "title": "PyCon 2010:Cooperative Multitasking with Twisted: Getting Things Done Concurrently. (#11)"},
{"date": "Feb 23, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-distributed-programming-with-pyro-7-3278905", "runtime": "27:28", "description": "", "title": "PyCon 2010:Distributed Programming with Pyro (#7)"},
{"date": "Feb 23, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-revisioned-databases-for-multiuser-editing-86-3277527", "runtime": "32:39", "description": "", "title": "PyCon 2010:Revisioned Databases for MultiUser Editing (#86)"},
{"date": "Feb 23, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-deployment-development-packaging-and-a-little-bit-of-the-cloud-180-3278972", "runtime": "43:12", "description": "", "title": "PyCon 2010:Deployment, development, packaging, and a little bit of the cloud (#180)"},
{"date": "Feb 23, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-turbogears-geospatial-framework-19-3278896", "runtime": "17:55", "description": "", "title": "PyCon 2010:TurboGears Geospatial Framework (#19)"},
{"date": "Feb 23, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-simple-wsgi-composition-story-of-one-refactoring-51-3278999", "runtime": "22:08", "description": "", "title": "PyCon 2010:Simple WSGI composition: story of one refactoring (#51)"},
{"date": "Feb 23, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-python-in-the-browser-71-3278927", "runtime": "30:25", "description": "", "title": "PyCon 2010:Python in the Browser (#71)"},
{"date": "May  7, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/django-in-the-real-world-part-003-2094662", "runtime": "22:41", "description": "[VIDEO HAS ISSUES: blurry vga] There's plenty of material (documentation, blogs, books) out there that'll help you write a site using Django... but then what? You've still got to test, deploy, monitor, and tune the site; failure at deployment time means all your beautiful code is for naught. This tutorial examines how best to cope when the Real World intrudes on your carefully designed website.", "title": "Django in the Real World (Part 003)"},
{"date": "Feb 20, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-plenary-friday-evening-lightning-talks-3264494", "runtime": "51:00", "description": "", "title": "PyCon 2010: Plenary: Friday Evening Lightning Talks"},
{"date": "Feb 22, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-actors-what-why-and-how-161-3274521", "runtime": "31:02", "description": "", "title": "PyCon 2010:Actors: What, Why, and How (#161)"},
{"date": "Feb 23, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-decorators-from-basics-to-class-decorators-to-decorator-libraries-138-3276709", "runtime": "29:48", "description": "Missing about 1 minute at start, because of technical problems.", "title": "PyCon 2010:Decorators From Basics to Class Decorators to Decorator Libraries (#138)"},
{"date": "Feb 23, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-seattle-a-python-based-platform-for-easy-development-and-deployment-of-networked-systems-and-applications-162-3276767", "runtime": "20:56", "description": "Beginning of talk missing, due to technical problems.", "title": "PyCon 2010:Seattle: A Python-based Platform for Easy Development and Deployment of Networked Systems and Applications. (#162)"},
{"date": "May 12, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/giving-back-and-helping-expand-the-python-community-a-roadmap-for-south-america-and-africa-2115103", "runtime": "32:57", "description": "For many of us, Python has dramatically changed our professional life: Open Source, technologies that get the job done, and let you learn and improve every day, a friendly and mature community, etc. Python is important! For learning, for science, for business, and for progress in general.", "title": "Giving back and helping expand the Python community. A roadmap for South America and Africa."},
{"date": "Feb 22, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-understanding-the-python-gil-82-3273690", "runtime": "46:10", "description": "", "title": "PyCon 2010:Understanding the Python GIL (#82)"},
{"date": "Feb 23, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-python-s-dusty-corners-182-3276706", "runtime": "26:36", "description": "", "title": "PyCon 2010:Python's Dusty Corners (#182)"},
{"date": "Feb 23, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-scaling-your-python-application-on-ec2-191-3276734", "runtime": "28:31", "description": "Missing audio first few seconds", "title": "PyCon 2010:Scaling your Python application on EC2 (#191)"},
{"date": "Feb 23, 2010", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2010-interfaces-adapters-and-factories-181-3276907", "runtime": "22:59", "description": "Beginning out of focus", "title": "PyCon 2010:Interfaces, Adapters and Factories (#181)"},
{"date": "May  4, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/how-to-build-applications-linux-distributions-will-package-2083028", "runtime": "30:38", "description": "[VIDEO HAS ISSUES: no audio first 1.5m] If you've ever created a nifty application that makes people's lives easier you know the truly hard part is convincing others to use it. One way to increase the number of people installing your software is to convince Linux distributions to package your software so that their end users can install by using the system tools they're used to. One way of convincing them is by making your application easy to package.", "title": "How to Build Applications Linux Distributions will Package"},
{"date": "May  6, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/the-state-of-the-python-community-leading-the-python-tribe-2091972", "runtime": "45:17", "description": "Steve Holden, Chairman of the Python Software Foundation, reflects on the meaning of the phrase \"the Python community\" and the changes that have taken place in the PSF in the last year. He discusses further possible changes that could turn the PSF into a more \"community-facing\" organization, and solicits your input on what kind of projects and activities it should be supporting.", "title": "The State of the Python Community: Leading the Python tribe"},
{"date": "May  6, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/plenary-intro-to-sprinting-2092562", "runtime": "04:12", "description": "by Brett Cannon What sprinting is: a group of people doing something together. Who goes: everyone! Why: fun, great learning, you can do it your way How: get a table, some chairs, some people...", "title": "Plenary: Intro to Sprinting"},
{"date": "May  6, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/the-lack-of-design-patterns-in-python-2091776", "runtime": "20:03", "description": "[VIDEO HAS ISSUES: ] There is a distinct lack of Design Patterns discussed in relation to Python. Are the communities ignorant of Design Patterns or is there something else going on here? This talk is based on my well-trafficked article \"Python isn\u2019t just Java without the compile\" and expands on that article by using Design Patterns as a crude metric of gaps in a programming language.", "title": "The (lack of) design patterns in Python"},
{"date": "May  6, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/how-i-distribute-python-applications-on-windows-py2exe-innosetup-2090661", "runtime": "27:49", "description": "There are many deployment options for Python code. I'll share what has worked well for me on Windows, packaging command line tools and services using py2exe and InnoSetup. I'll demonstrate a simple build script which creates windows binaries and an InnoSetup installer in one step. In addition, I'll go over common errors which come up when using py2exe and hints on troubleshooting them. This is a short talk, so there will be a follow-up Open Space session to share experience and help each other solve distribution problems.", "title": "How I Distribute Python applications on Windows - py2exe & InnoSetup"},
{"date": "May  7, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pylons-on-jython-2092767", "runtime": "26:44", "description": "[VIDEO HAS ISSUES: house audio] Jython is back, and better than ever.", "title": "Pylons on Jython"},
{"date": "May  7, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/django-on-jython-2092749", "runtime": "29:17", "description": "[VIDEO HAS ISSUES: house audio] Django is the most popular Python web framework, and the final release of Jython 2.5 should be available a couple of months before PyCon. This means we can now use a modern Python web framework on top of Java infrastructure by running Django on Jython. In this talk, we will show examples of how to use this combination, engage a discussion about what can take the Python (and Django) community from the Java world, especially the necessary infrastructure bits, and how a Django/Jython stack compares with other JVM web stacks like JRuby on Rails.", "title": "Django on Jython"},
{"date": "May  7, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/the-state-of-django-2092803", "runtime": "23:49", "description": "Django 1.0 was released in September 2008. This release marks a major turning point in Django's development; a real maturation of the project. Join the lead developers of Django as they discuss what's new in Django 1.0, cover the Django 1.1 release (currently scheduled for a few weeks before PyCon), and discuss the project's future.", "title": "The State of Django"},
{"date": "May  7, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/django-in-the-real-world-part-002-2094584", "runtime": "25:41", "description": "[VIDEO HAS ISSUES: blurry vga] There's plenty of material (documentation, blogs, books) out there that'll help you write a site using Django... but then what? You've still got to test, deploy, monitor, and tune the site; failure at deployment time means all your beautiful code is for naught. This tutorial examines how best to cope when the Real World intrudes on your carefully designed website.", "title": "Django in the Real World (Part 002)"},
{"date": "May  7, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/django-in-the-real-world-part-001-2094252", "runtime": "01:01:12", "description": "[VIDEO HAS ISSUES: blurry vga] There's plenty of material (documentation, blogs, books) out there that'll help you write a site using Django... but then what? You've still got to test, deploy, monitor, and tune the site; failure at deployment time means all your beautiful code is for naught. This tutorial examines how best to cope when the Real World intrudes on your carefully designed website.", "title": "Django in the Real World (Part 001)"},
{"date": "Apr 22, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/advanced-sqlalchemy-part-003-2033628", "runtime": "26:34", "description": "SQLAlchemy is the premier SQL toolkit for Python. SQLAlchemy exposes the full power of SQL while remaining easy to use for the basics, and is flexible enough to work with existing database schemas as well as fresh designs. SQLAlchemy is used in production by leading Python web frameworks Pylons and TurboGears as well as many other web and non-web developers. This tutorial discusses current data mapping techniques, advanced Query techniques, Session/transaction usage, and maximizing schema usage with SQLAlchemy's event model.", "title": "Advanced SQLAlchemy (Part 003)"},
{"date": "Apr 22, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/python-401-some-advanced-topics-part-001-2033516", "runtime": "58:57", "description": "Steve Holden challenges you to find new and interesting applications for some of the less heavily utilized features of Python including generator expressions, string interpolation, iteration and metaclasses.", "title": "Python 401: Some Advanced Topics (Part 001)"},
{"date": "Apr 22, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/advanced-sqlalchemy-part-001-2033859", "runtime": "59:14", "description": "SQLAlchemy is the premier SQL toolkit for Python. SQLAlchemy exposes the full power of SQL while remaining easy to use for the basics, and is flexible enough to work with existing database schemas as well as fresh designs. SQLAlchemy is used in production by leading Python web frameworks Pylons and TurboGears as well as many other web and non-web developers. This tutorial discusses current data mapping techniques, advanced Query techniques, Session/transaction usage, and maximizing schema usage with SQLAlchemy's event model.", "title": "Advanced SQLAlchemy (Part 001)"},
{"date": "Apr 22, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/advanced-sqlalchemy-part-002-2034125", "runtime": "55:04", "description": "SQLAlchemy is the premier SQL toolkit for Python. SQLAlchemy exposes the full power of SQL while remaining easy to use for the basics, and is flexible enough to work with existing database schemas as well as fresh designs. SQLAlchemy is used in production by leading Python web frameworks Pylons and TurboGears as well as many other web and non-web developers. This tutorial discusses current data mapping techniques, advanced Query techniques, Session/transaction usage, and maximizing schema usage with SQLAlchemy's event model.", "title": "Advanced SQLAlchemy (Part 002)"},
{"date": "May  1, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/an-introduction-to-google-app-engine-part-001-2069190", "runtime": "01:28:07", "description": "[VIDEO HAS ISSUES: ] Google App Engine allows you to build scalable web applications and host them on Google hardware. This hands on tutorial will walk you through the steps of building a basic web application, from setting up the SDK through to using the major APIs that App Engine provides.", "title": "An Introduction to Google App Engine (Part 001)"},
{"date": "May  1, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/an-introduction-to-google-app-engine-part-002-2069055", "runtime": "01:18:51", "description": "[VIDEO HAS ISSUES: ] Google App Engine allows you to build scalable web applications and host them on Google hardware. This hands on tutorial will walk you through the steps of building a basic web application, from setting up the SDK through to using the major APIs that App Engine provides.", "title": "An Introduction to Google App Engine (Part 002)"},
{"date": "Apr 22, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/python-401-some-advanced-topics-part-003-2033535", "runtime": "04:05", "description": "Steve Holden challenges you to find new and interesting applications for some of the less heavily utilized features of Python including generator expressions, string interpolation, iteration and metaclasses.", "title": "Python 401: Some Advanced Topics (Part 003)"},
{"date": "May  1, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/eggs-and-buildout-deployment-in-python-part-001-2071923", "runtime": "51:00", "description": "Puzzled about Python eggs and packages? Wondering how to repeatably pull together collections of packages into standalone development, testing and deployment environments, all while managing inter-dependencies? In this participatory tutorial, we'll start with distutils, walk through using eggs in the cheeseshop and creating your own eggs, touch a bit on using virtualenv to set up a development environment, and then dig into using zc.buildout to rigorously control assembly specifications, with build recipes, versioning and dependency management. We'll close by showing how to create your own recipes. Attendees are strongly encouraged to bring a laptop or partner with someone who does.", "title": "Eggs and Buildout Deployment in Python (Part 001)"},
{"date": "May  1, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/eggs-and-buildout-deployment-in-python-part-002-2072081", "runtime": "34:51", "description": "Puzzled about Python eggs and packages? Wondering how to repeatably pull together collections of packages into standalone development, testing and deployment environments, all while managing inter-dependencies? In this participatory tutorial, we'll start with distutils, walk through using eggs in the cheeseshop and creating your own eggs, touch a bit on using virtualenv to set up a development environment, and then dig into using zc.buildout to rigorously control assembly specifications, with build recipes, versioning and dependency management. We'll close by showing how to create your own recipes. Attendees are strongly encouraged to bring a laptop or partner with someone who does.", "title": "Eggs and Buildout Deployment in Python (Part 002)"},
{"date": "May  1, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/eggs-and-buildout-deployment-in-python-part-003-2072127", "runtime": "22:56", "description": "Puzzled about Python eggs and packages? Wondering how to repeatably pull together collections of packages into standalone development, testing and deployment environments, all while managing inter-dependencies? In this participatory tutorial, we'll start with distutils, walk through using eggs in the cheeseshop and creating your own eggs, touch a bit on using virtualenv to set up a development environment, and then dig into using zc.buildout to rigorously control assembly specifications, with build recipes, versioning and dependency management. We'll close by showing how to create your own recipes. Attendees are strongly encouraged to bring a laptop or partner with someone who does.", "title": "Eggs and Buildout Deployment in Python (Part 003)"},
{"date": "Apr 22, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/a-tour-of-python-standard-library-part-003-2032168", "runtime": "18:43", "description": "Welcome to A Tour of Python Standard Library. Together let us explore the various modules, which will help you to build robust working programs. Once you know about a particular library well, you will start replacing those 20 odd lines of code you used to write with a 2-3 lines and feel safe that your code will now work on all the platforms that Python supports. Just like the galaxy, the Python Standard Library is vast and when hitch-hiking I will take you through some important ones that happen to be used most often. You can explore, ask questions, experiment through out the ride. Welcome! And let the journey begin.", "title": "A Tour of Python Standard Library. (Part 003)"},
{"date": "Apr 22, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/an-introduction-to-object-oriented-programming-part-003-2032697", "runtime": "35:05", "description": "[VIDEO HAS ISSUES: 2 speakers, 1 mic.] Although often used as a \"scripting\" language, Python is an object-oriented programming language at its core. This tutorial is designed for programmers who are familiar with Python yet new to the concept of object-oriented programming. We also welcome programmers who are experienced with other object-oriented languages yet new to Python. We will begin the tutorial by introducing the general principles of object-oriented programming. We then focus on Python's treatment of object orientation. The tutorial will be organized as a mix of formal presentations together with hands-on demonstrations and exercises. Take your Python programming to the next level!", "title": "An Introduction to Object-Oriented Programming (Part 003)"},
{"date": "Apr 22, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/scrape-the-web-strategies-for-programming-websites-that-don-t-expect-it-part-002-2032513", "runtime": "29:21", "description": "[VIDEO HAS ISSUES: Speaker walked away from the mic most of the time.] Do you find yourself faced with websites that have data you need to extract? Would your life be simpler if you could programmatically input data into web applications, even those tuned to resist interaction by bots? We'll discuss the basics of web scraping, and then dive into the details of different methods and where they are most applicable. You'll leave with an understanding of when to apply different tools, and learn about a \"heavy hammer\" for screen scraping that I picked up at a project for the Electronic Frontier Foundation. Atendees should bring a laptop, if possible, to try the examples we discuss and optionally take notes.", "title": "Scrape the Web: Strategies for programming websites that don't expect it (Part 002)"},
{"date": "Apr 22, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/scrape-the-web-strategies-for-programming-websites-that-don-t-expect-it-part-001-2032367", "runtime": "57:17", "description": "[VIDEO HAS ISSUES: Speaker walked away from the mic most of the time.] Do you find yourself faced with websites that have data you need to extract? Would your life be simpler if you could programmatically input data into web applications, even those tuned to resist interaction by bots? We'll discuss the basics of web scraping, and then dive into the details of different methods and where they are most applicable. You'll leave with an understanding of when to apply different tools, and learn about a \"heavy hammer\" for screen scraping that I picked up at a project for the Electronic Frontier Foundation. Atendees should bring a laptop, if possible, to try the examples we discuss and optionally take notes.", "title": "Scrape the Web: Strategies for programming websites that don't expect it (Part 001)"},
{"date": "Apr 22, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/an-introduction-to-object-oriented-programming-part-001-2032638", "runtime": "01:00:39", "description": "[VIDEO HAS ISSUES: 2 speakers, 1 mic.] Although often used as a \"scripting\" language, Python is an object-oriented programming language at its core. This tutorial is designed for programmers who are familiar with Python yet new to the concept of object-oriented programming. We also welcome programmers who are experienced with other object-oriented languages yet new to Python. We will begin the tutorial by introducing the general principles of object-oriented programming. We then focus on Python's treatment of object orientation. The tutorial will be organized as a mix of formal presentations together with hands-on demonstrations and exercises. Take your Python programming to the next level!", "title": "An Introduction to Object-Oriented Programming (Part 001)"},
{"date": "Apr 22, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/scrape-the-web-strategies-for-programming-websites-that-don-t-expect-it-part-003-2032214", "runtime": "15:04", "description": "[VIDEO HAS ISSUES: Speaker walked away from the mic most of the time.] Do you find yourself faced with websites that have data you need to extract? Would your life be simpler if you could programmatically input data into web applications, even those tuned to resist interaction by bots? We'll discuss the basics of web scraping, and then dive into the details of different methods and where they are most applicable. You'll leave with an understanding of when to apply different tools, and learn about a \"heavy hammer\" for screen scraping that I picked up at a project for the Electronic Frontier Foundation. Atendees should bring a laptop, if possible, to try the examples we discuss and optionally take notes.", "title": "Scrape the Web: Strategies for programming websites that don't expect it (Part 003)"},
{"date": "Apr 22, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/easy-concurrency-with-kamaelia-part-001-2033021", "runtime": "59:08", "description": "[VIDEO HAS ISSUES: ] Writing concurrent applications in Python is now becoming not only easier, but quite elegant and simple, thanks to Kamaelia. Kamaelia is an interesting component based framework originating from BBC research. It accomplishes concurrent processing of data from and to many protocols. Components easily connect and pass data from and to each other. We are going to explore Kamaelia's strengths and possibilities, by running simple examples, then trying nested protocol support, and maybe some other fun examples if time permits.", "title": "Easy Concurrency with Kamaelia (Part 001)"},
{"date": "Apr 22, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/an-introduction-to-object-oriented-programming-part-002-2032851", "runtime": "25:59", "description": "[VIDEO HAS ISSUES: 2 speakers, 1 mic.] Although often used as a \"scripting\" language, Python is an object-oriented programming language at its core. This tutorial is designed for programmers who are familiar with Python yet new to the concept of object-oriented programming. We also welcome programmers who are experienced with other object-oriented languages yet new to Python. We will begin the tutorial by introducing the general principles of object-oriented programming. We then focus on Python's treatment of object orientation. The tutorial will be organized as a mix of formal presentations together with hands-on demonstrations and exercises. Take your Python programming to the next level!", "title": "An Introduction to Object-Oriented Programming (Part 002)"},
{"date": "Apr 22, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/python-401-some-advanced-topics-part-002-2033319", "runtime": "28:22", "description": "Steve Holden challenges you to find new and interesting applications for some of the less heavily utilized features of Python including generator expressions, string interpolation, iteration and metaclasses.", "title": "Python 401: Some Advanced Topics (Part 002)"},
{"date": "Apr 16, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/py-test-ii-cross-platform-and-distributed-testing-part-002-2011939", "runtime": "28:15", "description": "[VIDEO HAS ISSUES: ] Want to know more about advanced automated testing with Python? Use a tool that allows you to ad-hoc distribute tests to multiple CPUs for speed and to multiple platforms for compatibility checks? With tons of debugging help in failure situations? This tutorial provides in-depth information on advanced usages of the popular py.test tool. We highlight its current feature set including using and writing extensions for generating HTML pages, testing Javascript or ReST documents. We showcase and discuss ways of distributing tests across CPUs and platforms and will leave time to discuss and tackle specific scenarios brought up during the session. The tutorial format will be an interactive lecture with plenty of time for questions.", "title": "py.test II - cross-platform and distributed testing (Part 002)"},
{"date": "Apr 22, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/easy-concurrency-with-kamaelia-part-002-2033076", "runtime": "18:15", "description": "[VIDEO HAS ISSUES: ] Writing concurrent applications in Python is now becoming not only easier, but quite elegant and simple, thanks to Kamaelia. Kamaelia is an interesting component based framework originating from BBC research. It accomplishes concurrent processing of data from and to many protocols. Components easily connect and pass data from and to each other. We are going to explore Kamaelia's strengths and possibilities, by running simple examples, then trying nested protocol support, and maybe some other fun examples if time permits.", "title": "Easy Concurrency with Kamaelia (Part 002)"},
{"date": "Apr 21, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/introduction-to-turbogears2-wsgi-part-001-2031769", "runtime": "58:39", "description": "[VIDEO HAS ISSUES: annoying noise starting at 1:17 (2nd half)] Are you interested in building web applications with modern libraries and tools? Do you want to build on top of the work that many others have done? Have you done some basic web development, but want to be more productive. If so this is the class for you. TurboGears 2 provides a well defined set of the best libraries for web development python has to offer. But more importantly it brings them together in a clean, well documented way that allows for developing reusable TurboGears 2 components. The result is a powerful, flexible, set of tools that helps make it easy to build dynamic web applications.", "title": "Introduction to TurboGears2 & WSGI (Part 001)"},
{"date": "Apr 16, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/building-real-time-network-applications-for-the-web-with-twisted-and-orbited-part-001-2012945", "runtime": "01:03:36", "description": "Haven't you always wanted to create a massively multiplayer, real-time game for the browser? Or perhaps add chat to your website, or maybe write a real-time financial application, collaborative text editor, or network health monitoring app, all in the browser. Forget web frameworks; Orbited.TCPSocket lets you communicate directly from a browser to any network server, with any protocol you want. By tutorial's end, every attendee will have built their own real-time data monitoring application, or multiplayer game, from scratch using Orbited, Twisted, and js.io.", "title": "Building Real-time Network applications for the web with Twisted and Orbited (Part 001)"},
{"date": "Apr 21, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/introduction-to-turbogears2-wsgi-part-002-2031860", "runtime": "44:44", "description": "[VIDEO HAS ISSUES: annoying noise starting at 1:17 (2nd half)] Are you interested in building web applications with modern libraries and tools? Do you want to build on top of the work that many others have done? Have you done some basic web development, but want to be more productive. If so this is the class for you. TurboGears 2 provides a well defined set of the best libraries for web development python has to offer. But more importantly it brings them together in a clean, well documented way that allows for developing reusable TurboGears 2 components. The result is a powerful, flexible, set of tools that helps make it easy to build dynamic web applications.", "title": "Introduction to TurboGears2 & WSGI (Part 002)"},
{"date": "Apr 16, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/building-real-time-network-applications-for-the-web-with-twisted-and-orbited-part-002-2012668", "runtime": "26:54", "description": "Haven't you always wanted to create a massively multiplayer, real-time game for the browser? Or perhaps add chat to your website, or maybe write a real-time financial application, collaborative text editor, or network health monitoring app, all in the browser. Forget web frameworks; Orbited.TCPSocket lets you communicate directly from a browser to any network server, with any protocol you want. By tutorial's end, every attendee will have built their own real-time data monitoring application, or multiplayer game, from scratch using Orbited, Twisted, and js.io.", "title": "Building Real-time Network applications for the web with Twisted and Orbited (Part 002)"},
{"date": "Apr 16, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/introduction-to-functional-web-testing-with-twill-selenium-part-001-2012419", "runtime": "02:03:05", "description": "[VIDEO HAS ISSUES: ] This tutorial aims to educate attendees on the the basics of functional testing of web applications. Is your app rendered as plain HTML? Great! We'll show you how to build a test suite for it. Is your app all AJAXy? No problem! We can do that too! We're going to write a web application, first in straight html and then with AJAX, and show you how to try to break it. At the end of this hands-on session, you'll be able to write tests for almost any web site, using all open-source tools and our favorite language - Python.", "title": "Introduction to Functional Web Testing With Twill & Selenium (Part 001)"},
{"date": "Apr 16, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/building-real-time-network-applications-for-the-web-with-twisted-and-orbited-part-003-2012777", "runtime": "39:06", "description": "Haven't you always wanted to create a massively multiplayer, real-time game for the browser? Or perhaps add chat to your website, or maybe write a real-time financial application, collaborative text editor, or network health monitoring app, all in the browser. Forget web frameworks; Orbited.TCPSocket lets you communicate directly from a browser to any network server, with any protocol you want. By tutorial's end, every attendee will have built their own real-time data monitoring application, or multiplayer game, from scratch using Orbited, Twisted, and js.io.", "title": "Building Real-time Network applications for the web with Twisted and Orbited (Part 003)"},
{"date": "Apr 16, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/introduction-to-functional-web-testing-with-twill-selenium-part-002-2012159", "runtime": "45:21", "description": "[VIDEO HAS ISSUES: ] This tutorial aims to educate attendees on the the basics of functional testing of web applications. Is your app rendered as plain HTML? Great! We'll show you how to build a test suite for it. Is your app all AJAXy? No problem! We can do that too! We're going to write a web application, first in straight html and then with AJAX, and show you how to try to break it. At the end of this hands-on session, you'll be able to write tests for almost any web site, using all open-source tools and our favorite language - Python.", "title": "Introduction to Functional Web Testing With Twill & Selenium (Part 002)"},
{"date": "Apr 22, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/a-tour-of-python-standard-library-part-002-2032003", "runtime": "30:48", "description": "Welcome to A Tour of Python Standard Library. Together let us explore the various modules, which will help you to build robust working programs. Once you know about a particular library well, you will start replacing those 20 odd lines of code you used to write with a 2-3 lines and feel safe that your code will now work on all the platforms that Python supports. Just like the galaxy, the Python Standard Library is vast and when hitch-hiking I will take you through some important ones that happen to be used most often. You can explore, ask questions, experiment through out the ride. Welcome! And let the journey begin.", "title": "A Tour of Python Standard Library. (Part 002)"},
{"date": "Apr 22, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/a-tour-of-python-standard-library-part-001-2032138", "runtime": "01:52:03", "description": "Welcome to A Tour of Python Standard Library. Together let us explore the various modules, which will help you to build robust working programs. Once you know about a particular library well, you will start replacing those 20 odd lines of code you used to write with a 2-3 lines and feel safe that your code will now work on all the platforms that Python supports. Just like the galaxy, the Python Standard Library is vast and when hitch-hiking I will take you through some important ones that happen to be used most often. You can explore, ask questions, experiment through out the ride. Welcome! And let the journey begin.", "title": "A Tour of Python Standard Library. (Part 001)"},
{"date": "Apr 16, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/hands-on-with-trac-plugins-part-001-2010039", "runtime": "01:05:47", "description": "Trac, an open-source project management tool, has been gaining in popularity, however few people tap its true potential. To fully mold Trac to your team and project, you must venture into the realm of custom plugins. These short (or not so short) bits of code allow you to customize almost every aspect of Trac to your liking. Come learn how to get 110% out of your Trac system, or just see what Trac can do for you. Attendees should bring a laptop for the hands-on portion or the tutorial.", "title": "Hands on with Trac plugins (Part 001)"},
{"date": "Apr 16, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/internet-programming-with-python-part-001-2010338", "runtime": "58:40", "description": "This tutorial introduces current Python programmers to 3-4 distinct areas of Internet programming, each in self-contained (approximately) 1-hour lectures (unless otherwise noted) with a demonstration of code on each lecture topic.", "title": "Internet Programming with Python (Part 001)"},
{"date": "Apr 16, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/hands-on-with-trac-plugins-part-002-2010067", "runtime": "11:17", "description": "Trac, an open-source project management tool, has been gaining in popularity, however few people tap its true potential. To fully mold Trac to your team and project, you must venture into the realm of custom plugins. These short (or not so short) bits of code allow you to customize almost every aspect of Trac to your liking. Come learn how to get 110% out of your Trac system, or just see what Trac can do for you. Attendees should bring a laptop for the hands-on portion or the tutorial.", "title": "Hands on with Trac plugins (Part 002)"},
{"date": "Apr 16, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/internet-programming-with-python-part-002-2010556", "runtime": "28:04", "description": "This tutorial introduces current Python programmers to 3-4 distinct areas of Internet programming, each in self-contained (approximately) 1-hour lectures (unless otherwise noted) with a demonstration of code on each lecture topic.", "title": "Internet Programming with Python (Part 002)"},
{"date": "Apr 16, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/the-big-f-ing-tutorial-development-using-the-repoze-bfg-web-framework-part-003-2010690", "runtime": "26:40", "description": "[VIDEO HAS ISSUES: ] Are you a Python web developer who thinks there might be some great stuff hidden away in Zope but you consider it inaccessible to you because you feel that Zope imposes too many foreign concepts for your tastes? Are you a more-or-less happy Zope developer that has the nagging feeling that much of Zope is unnecessary \"baggage\" on your current project? Maybe you're a Plone developer who feels that Plone is unsuitable for one of your current projects because it's too complicated? This tutorial will present everything you need to know about repoze.bfg, a small Python web framework in the spirit of Pylons. The goals of repoze.bfg are simplicity, familiarity to Zope programmers (but no Zope experience is required), execution speed, and complete, comprehensive, and up-to-date documentation. In this tutorial, we'll explain the core concepts in repoze.bfg, then we'll lead a guided development session where we make a small application using the framework. We'll also cover packaging and deployment of the application. Questions are highly encouraged during the presentation.", "title": "The Big F'ing Tutorial: Development Using the repoze.bfg Web Framework (Part 003)"},
{"date": "Apr 16, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/internet-programming-with-python-part-003-2010085", "runtime": "01:58", "description": "This tutorial introduces current Python programmers to 3-4 distinct areas of Internet programming, each in self-contained (approximately) 1-hour lectures (unless otherwise noted) with a demonstration of code on each lecture topic.", "title": "Internet Programming with Python (Part 003)"},
{"date": "Apr 16, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/the-big-f-ing-tutorial-development-using-the-repoze-bfg-web-framework-part-002-2010962", "runtime": "26:26", "description": "[VIDEO HAS ISSUES: ] Are you a Python web developer who thinks there might be some great stuff hidden away in Zope but you consider it inaccessible to you because you feel that Zope imposes too many foreign concepts for your tastes? Are you a more-or-less happy Zope developer that has the nagging feeling that much of Zope is unnecessary \"baggage\" on your current project? Maybe you're a Plone developer who feels that Plone is unsuitable for one of your current projects because it's too complicated? This tutorial will present everything you need to know about repoze.bfg, a small Python web framework in the spirit of Pylons. The goals of repoze.bfg are simplicity, familiarity to Zope programmers (but no Zope experience is required), execution speed, and complete, comprehensive, and up-to-date documentation. In this tutorial, we'll explain the core concepts in repoze.bfg, then we'll lead a guided development session where we make a small application using the framework. We'll also cover packaging and deployment of the application. Questions are highly encouraged during the presentation.", "title": "The Big F'ing Tutorial: Development Using the repoze.bfg Web Framework (Part 002)"},
{"date": "Apr 16, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/py-test-ii-cross-platform-and-distributed-testing-part-001-2011597", "runtime": "58:49", "description": "[VIDEO HAS ISSUES: ] Want to know more about advanced automated testing with Python? Use a tool that allows you to ad-hoc distribute tests to multiple CPUs for speed and to multiple platforms for compatibility checks? With tons of debugging help in failure situations? This tutorial provides in-depth information on advanced usages of the popular py.test tool. We highlight its current feature set including using and writing extensions for generating HTML pages, testing Javascript or ReST documents. We showcase and discuss ways of distributing tests across CPUs and platforms and will leave time to discuss and tackle specific scenarios brought up during the session. The tutorial format will be an interactive lecture with plenty of time for questions.", "title": "py.test II - cross-platform and distributed testing (Part 001)"},
{"date": "Apr 16, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/the-big-f-ing-tutorial-development-using-the-repoze-bfg-web-framework-part-001-2011260", "runtime": "01:05:37", "description": "[VIDEO HAS ISSUES: ] Are you a Python web developer who thinks there might be some great stuff hidden away in Zope but you consider it inaccessible to you because you feel that Zope imposes too many foreign concepts for your tastes? Are you a more-or-less happy Zope developer that has the nagging feeling that much of Zope is unnecessary \"baggage\" on your current project? Maybe you're a Plone developer who feels that Plone is unsuitable for one of your current projects because it's too complicated? This tutorial will present everything you need to know about repoze.bfg, a small Python web framework in the spirit of Pylons. The goals of repoze.bfg are simplicity, familiarity to Zope programmers (but no Zope experience is required), execution speed, and complete, comprehensive, and up-to-date documentation. In this tutorial, we'll explain the core concepts in repoze.bfg, then we'll lead a guided development session where we make a small application using the framework. We'll also cover packaging and deployment of the application. Questions are highly encouraged during the presentation.", "title": "The Big F'ing Tutorial: Development Using the repoze.bfg Web Framework (Part 001)"},
{"date": "Apr 16, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/py-test-ii-cross-platform-and-distributed-testing-part-003-2011681", "runtime": "23:48", "description": "[VIDEO HAS ISSUES: ] Want to know more about advanced automated testing with Python? Use a tool that allows you to ad-hoc distribute tests to multiple CPUs for speed and to multiple platforms for compatibility checks? With tons of debugging help in failure situations? This tutorial provides in-depth information on advanced usages of the popular py.test tool. We highlight its current feature set including using and writing extensions for generating HTML pages, testing Javascript or ReST documents. We showcase and discuss ways of distributing tests across CPUs and platforms and will leave time to discuss and tackle specific scenarios brought up during the session. The tutorial format will be an interactive lecture with plenty of time for questions.", "title": "py.test II - cross-platform and distributed testing (Part 003)"},
{"date": "Apr 16, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/plenary-morning-lightning-talks-saturday-2009495", "runtime": "54:46", "description": "TBA", "title": "Plenary: Morning Lightning Talks (Saturday)"},
{"date": "Apr 16, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/python-102-part-002-2009171", "runtime": "26:04", "description": "This half-day tutorial presents intermediate and some advanced features of Python to beginning and intermediate programmers. It pairs well with Python 101 following a similar outline but at a deeper level. Rather than starting with \"Hello, world!\", we use the interactive Python interpreter to get hands-on familiarity with much of core Python before covering blocks and scripts. The tutorial is divided into short sections, each with presentation and exercises, to quickly cover lots of ground. Advanced topics are introduced throughout and covered in \"extra credit\" exercises such that more advanced participants can learn at their own pace.", "title": "Python 102 (Part 002)"},
{"date": "Apr 15, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/python-102-part-003-2009032", "runtime": "21:24", "description": "This half-day tutorial presents intermediate and some advanced features of Python to beginning and intermediate programmers. It pairs well with Python 101 following a similar outline but at a deeper level. Rather than starting with \"Hello, world!\", we use the interactive Python interpreter to get hands-on familiarity with much of core Python before covering blocks and scripts. The tutorial is divided into short sections, each with presentation and exercises, to quickly cover lots of ground. Advanced topics are introduced throughout and covered in \"extra credit\" exercises such that more advanced participants can learn at their own pace.", "title": "Python 102 (Part 003)"},
{"date": "Apr 16, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/python-101-part-002-2009470", "runtime": "52:41", "description": "This half-day tutorial presents the basics of Python to beginning and intermediate programmers. It pairs well with Python 102 which follows a similar outline but goes much deeper. Rather than starting with \"Hello, world!\", we use the interactive Python interpreter to get hands-on familiarity with much of core Python before covering blocks and scripts. The tutorial is divided into short sections, each with presentation and exercises, to quickly cover lots of ground. Advanced topics are introduced throughout and covered in \"extra credit\" exercises such that more advanced participants can learn at their own pace.", "title": "Python 101 (Part 002)"},
{"date": "Apr 16, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/python-101-part-001-2009596", "runtime": "01:00:00", "description": "This 3 part tutorial presents the basics of Python to beginning and intermediate programmers. It pairs well with Python 102 which follows a similar outline but goes much deeper. Rather than starting with \"Hello, world!\", we use the interactive Python interpreter to get hands-on familiarity with much of core Python before covering blocks and scripts. The tutorial is divided into short sections, each with presentation and exercises, to quickly cover lots of ground. Advanced topics are introduced throughout and covered in \"extra credit\" exercises such that more advanced participants can learn at their own pace.", "title": "Python 101 (Part 001)"},
{"date": "Apr 15, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/introduction-to-sqlalchemy-part-003-2008974", "runtime": "27:58", "description": "[VIDEO HAS ISSUES: some buzzing ] SQLAlchemy is the premier SQL toolkit for Python. SQLAlchemy exposes the full power of SQL while remaining easy to use for the basics, and is flexible enough to work with existing database schemas as well as fresh designs. SQLAlchemy is used in production by leading Python web frameworks Pylons and Turbogears as well as many other web and non-web developers. This tutorial teaches SQLAlchemy's object-relational mapping to automate painlessly loading and persisting objects from and to your database, even when complex relationships exist.", "title": "Introduction to SQLAlchemy (Part 003)"},
{"date": "Apr 16, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/python-102-part-001-2009315", "runtime": "01:00:38", "description": "This half-day tutorial presents intermediate and some advanced features of Python to beginning and intermediate programmers. It pairs well with Python 101 following a similar outline but at a deeper level. Rather than starting with \"Hello, world!\", we use the interactive Python interpreter to get hands-on familiarity with much of core Python before covering blocks and scripts. The tutorial is divided into short sections, each with presentation and exercises, to quickly cover lots of ground. Advanced topics are introduced throughout and covered in \"extra credit\" exercises such that more advanced participants can learn at their own pace.", "title": "Python 102 (Part 001)"},
{"date": "Apr 16, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/data-storage-in-python-an-overview-of-options-part-003-2009608", "runtime": "02:27", "description": "There are many possibilities in Python to store data. This tutorials explores some of them: flat file, Excel files, NetCDF and HDF5, serialization with pickle and friends, relational databases, bsddb and ZODB. The objective of this course is to give the participants an overview over available options as well as there advantages and disadvantages for different purposes. Participants are strongly recommended to bring laptops because all topics are introduced with examples and exercises.", "title": "Data Storage in Python - An Overview of Options (Part 003)"},
{"date": "Apr 16, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/data-storage-in-python-an-overview-of-options-part-001-2009753", "runtime": "56:34", "description": "There are many possibilities in Python to store data. This tutorials explores some of them: flat file, Excel files, NetCDF and HDF5, serialization with pickle and friends, relational databases, bsddb and ZODB. The objective of this course is to give the participants an overview over available options as well as there advantages and disadvantages for different purposes. Participants are strongly recommended to bring laptops because all topics are introduced with examples and exercises.", "title": "Data Storage in Python - An Overview of Options (Part 001)"},
{"date": "Apr 16, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/data-storage-in-python-an-overview-of-options-part-002-2009879", "runtime": "29:49", "description": "There are many possibilities in Python to store data. This tutorials explores some of them: flat file, Excel files, NetCDF and HDF5, serialization with pickle and friends, relational databases, bsddb and ZODB. The objective of this course is to give the participants an overview over available options as well as there advantages and disadvantages for different purposes. Participants are strongly recommended to bring laptops because all topics are introduced with examples and exercises.", "title": "Data Storage in Python - An Overview of Options (Part 002)"},
{"date": "Apr 15, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/intermediate-turbogears-part-001-2006838", "runtime": "01:02:53", "description": "Have you conquered the basics of Pylons/TurboGears2 (or just taken the morning class)? Do you want to understand more about how everything works, and how you can go beyond the basics to understand how to customize things? This class will take you from a basic understanding of how to use the framework, to a clear picture of how the framework pieces are put together. I will also cover how to create REST+JSON based web services, we'll focus particularly on how all this works with rich javascript based user interfaces, but the techniques should easily apply to Flex, or other \"Rich Internet Application\" tools.", "title": "Intermediate Turbogears (Part 001)"},
{"date": "Apr 15, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/using-twisted-deferreds-part-002-2008059", "runtime": "32:46", "description": "While the documentation about deferreds is good, it is still not enough for many. In this interactive tutorial, I will cover both the basics of deferreds and many non-trivial use-cases, with discussion of various approaches. Common mistakes, gotchas and other issues will be explained, as well as good idioms and techniques to use deferreds without pain. Deferreds bring asynchronous APIs the clarity and programming power that is sometimes lost when using event-based programming. They are an idea taken from many other programming languages, and made into a Pythonic solution If you are using Twisted, or would like to use Twisted, this tutorial can help you with one of the most subtle issues inherent in its APIs - Deferreds.", "title": "Using Twisted Deferreds (Part 002)"},
{"date": "Apr 15, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/intermediate-turbogears-part-002-2007154", "runtime": "28:47", "description": "Have you conquered the basics of Pylons/TurboGears2 (or just taken the morning class)? Do you want to understand more about how everything works, and how you can go beyond the basics to understand how to customize things? This class will take you from a basic understanding of how to use the framework, to a clear picture of how the framework pieces are put together. I will also cover how to create REST+JSON based web services, we'll focus particularly on how all this works with rich javascript based user interfaces, but the techniques should easily apply to Flex, or other \"Rich Internet Application\" tools.", "title": "Intermediate Turbogears (Part 002)"},
{"date": "Apr 15, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/using-twisted-deferreds-part-001-2007522", "runtime": "53:56", "description": "While the documentation about deferreds is good, it is still not enough for many. In this interactive tutorial, I will cover both the basics of deferreds and many non-trivial use-cases, with discussion of various approaches. Common mistakes, gotchas and other issues will be explained, as well as good idioms and techniques to use deferreds without pain. Deferreds bring asynchronous APIs the clarity and programming power that is sometimes lost when using event-based programming. They are an idea taken from many other programming languages, and made into a Pythonic solution If you are using Twisted, or would like to use Twisted, this tutorial can help you with one of the most subtle issues inherent in its APIs - Deferreds.", "title": "Using Twisted Deferreds (Part 001)"},
{"date": "Apr 15, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/introduction-to-sqlalchemy-part-001-2008928", "runtime": "01:00:23", "description": "[VIDEO HAS ISSUES: some buzzing ] SQLAlchemy is the premier SQL toolkit for Python. SQLAlchemy exposes the full power of SQL while remaining easy to use for the basics, and is flexible enough to work with existing database schemas as well as fresh designs. SQLAlchemy is used in production by leading Python web frameworks Pylons and Turbogears as well as many other web and non-web developers. This tutorial teaches SQLAlchemy's object-relational mapping to automate painlessly loading and persisting objects from and to your database, even when complex relationships exist.", "title": "Introduction to SQLAlchemy (Part 001)"},
{"date": "Apr 15, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/intermediate-turbogears-part-003-2007256", "runtime": "19:22", "description": "Have you conquered the basics of Pylons/TurboGears2 (or just taken the morning class)? Do you want to understand more about how everything works, and how you can go beyond the basics to understand how to customize things? This class will take you from a basic understanding of how to use the framework, to a clear picture of how the framework pieces are put together. I will also cover how to create REST+JSON based web services, we'll focus particularly on how all this works with rich javascript based user interfaces, but the techniques should easily apply to Flex, or other \"Rich Internet Application\" tools.", "title": "Intermediate Turbogears (Part 003)"},
{"date": "Apr 15, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/using-twisted-deferreds-part-003-2007270", "runtime": "00:58", "description": "While the documentation about deferreds is good, it is still not enough for many. In this interactive tutorial, I will cover both the basics of deferreds and many non-trivial use-cases, with discussion of various approaches. Common mistakes, gotchas and other issues will be explained, as well as good idioms and techniques to use deferreds without pain. Deferreds bring asynchronous APIs the clarity and programming power that is sometimes lost when using event-based programming. They are an idea taken from many other programming languages, and made into a Pythonic solution If you are using Twisted, or would like to use Twisted, this tutorial can help you with one of the most subtle issues inherent in its APIs - Deferreds.", "title": "Using Twisted Deferreds (Part 003)"},
{"date": "Apr 15, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/python-for-teachers-and-teachers-of-teachers-part-001-2008375", "runtime": "57:09", "description": "As a geek with Python kung fu, you have fun skills to share with others, including those still in high school and seeking to master mathematical concepts that will serve them for a life time. In taking this tutorial, you're opening a communications channel between yourself, and other eager learners hoping to partake more deeply of open source culture and the opportunities it offers. We know from last year that many PyCon delegates are broadly interested in education track. This proposal attempts to support this demand by developing some publicly-accessible Python-related material that demonstrates how object-oriented programming be learned by using them to implement concepts from the mathematical domain. Learning can take place at multiple levels: Python and object-oriented concepts. Mathematical concepts, which will be demonstrated in ways readily accessible to anyone who understands Python. Presentation of programming topics in the educational environment. From this latter point of view the pair teaching format can be considered experimental. Its success or otherwise will be determined largely by group dynamics, and our goal is to make the outcome in and of itself provide useful empirical data helpful to others planning workshops.", "title": "Python for Teachers (and Teachers of Teachers) (Part 001)"},
{"date": "Apr 15, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/introduction-to-sqlalchemy-part-002-2008778", "runtime": "25:24", "description": "[VIDEO HAS ISSUES: some buzzing ] SQLAlchemy is the premier SQL toolkit for Python. SQLAlchemy exposes the full power of SQL while remaining easy to use for the basics, and is flexible enough to work with existing database schemas as well as fresh designs. SQLAlchemy is used in production by leading Python web frameworks Pylons and Turbogears as well as many other web and non-web developers. This tutorial teaches SQLAlchemy's object-relational mapping to automate painlessly loading and persisting objects from and to your database, even when complex relationships exist.", "title": "Introduction to SQLAlchemy (Part 002)"},
{"date": "Apr 15, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/python-for-teachers-and-teachers-of-teachers-part-002-2008102", "runtime": "06:13", "description": "As a geek with Python kung fu, you have fun skills to share with others, including those still in high school and seeking to master mathematical concepts that will serve them for a life time. In taking this tutorial, you're opening a communications channel between yourself, and other eager learners hoping to partake more deeply of open source culture and the opportunities it offers. We know from last year that many PyCon delegates are broadly interested in education track. This proposal attempts to support this demand by developing some publicly-accessible Python-related material that demonstrates how object-oriented programming be learned by using them to implement concepts from the mathematical domain. Learning can take place at multiple levels: Python and object-oriented concepts. Mathematical concepts, which will be demonstrated in ways readily accessible to anyone who understands Python. Presentation of programming topics in the educational environment. From this latter point of view the pair teaching format can be considered experimental. Its success or otherwise will be determined largely by group dynamics, and our goal is to make the outcome in and of itself provide useful empirical data helpful to others planning workshops.", "title": "Python for Teachers (and Teachers of Teachers) (Part 002)"},
{"date": "Apr 15, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/faster-python-programs-through-optimization-part-001-2005531", "runtime": "01:03:47", "description": "[VIDEO HAS ISSUES: vga blurry] Although Python programs may be slow for certain types of tasks, there are many different ways to improve performance. This tutorial will introduce optimization strategies and demonstrate techniques to implement them. Another of the objectives of this course is to give participants the ability to decide what might be the optimal solution for a certain performance problem. Participants are strongly recommended to bring laptops because all techniques are introduced with examples and exercises.", "title": "Faster Python Programs through Optimization (Part 001)"},
{"date": "Apr 15, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/a-curious-course-on-coroutines-and-concurrency-part-001-2006228", "runtime": "54:08", "description": "[VIDEO HAS ISSUES: bit of clipping start to finish.] If you are a programmer who cares about Python and concurrency, then you should also care about Python coroutines. Although they were first introduced in Python 2.5, coroutines remain one of Python's most overlooked features---often vaguely described as a curious \"extension\" of generator functions with little insight as to how they might be applied to real-world problems. This tutorial examines coroutines in a more practical light by showing how they are actually a very elegant way to implement a processing \"task.\" Using this task abstraction, it is possible to use coroutines to implement processing pipelines, event handling systems, and programs based on cooperative multitasking. Moreover, if you define tasks using coroutines, they can be easily incorporated into more traditional concurrent programs that utilize threads or message passing.", "title": "A Curious Course on Coroutines and Concurrency (Part 001)"},
{"date": "Apr 15, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/faster-python-programs-through-optimization-part-003-2005398", "runtime": "13:23", "description": "[VIDEO HAS ISSUES: vga blurry] Although Python programs may be slow for certain types of tasks, there are many different ways to improve performance. This tutorial will introduce optimization strategies and demonstrate techniques to implement them. Another of the objectives of this course is to give participants the ability to decide what might be the optimal solution for a certain performance problem. Participants are strongly recommended to bring laptops because all techniques are introduced with examples and exercises.", "title": "Faster Python Programs through Optimization (Part 003)"},
{"date": "Apr 15, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/a-curious-course-on-coroutines-and-concurrency-part-003-2005963", "runtime": "17:57", "description": "[VIDEO HAS ISSUES: bit of clipping start to finish.] If you are a programmer who cares about Python and concurrency, then you should also care about Python coroutines. Although they were first introduced in Python 2.5, coroutines remain one of Python's most overlooked features---often vaguely described as a curious \"extension\" of generator functions with little insight as to how they might be applied to real-world problems. This tutorial examines coroutines in a more practical light by showing how they are actually a very elegant way to implement a processing \"task.\" Using this task abstraction, it is possible to use coroutines to implement processing pipelines, event handling systems, and programs based on cooperative multitasking. Moreover, if you define tasks using coroutines, they can be easily incorporated into more traditional concurrent programs that utilize threads or message passing.", "title": "A Curious Course on Coroutines and Concurrency (Part 003)"},
{"date": "Apr 15, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/developing-with-ironpython-part-002-2005366", "runtime": "30:51", "description": "[VIDEO HAS ISSUES: first 5 min muted ] A tutorial on \"Developing with IronPython\": Python for .NET and Mono. The Common Language Runtime is very different to CPython, with a powerful JIT compiler, and different garbage collection and threading model. More importantly, .NET's huge range of libraries can now be used from Python. Various aspects of developing with IronPython will be covered and attendees will put this into practice by extending an example application. Topics include: Differences between IronPython and CPython, including \"Why Use IronPython?\" Introduction to the .NET framework - a dynamic language on a statically typed framework GUIs with Windows Forms Databases Network requests and web services Handling XML Threading Come with laptop - running Linux, Windows or Mac OS X - and ready to code!", "title": "Developing with IronPython (Part 002)"},
{"date": "Apr 15, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/a-curious-course-on-coroutines-and-concurrency-part-002-2005913", "runtime": "32:06", "description": "[VIDEO HAS ISSUES: bit of clipping start to finish.] If you are a programmer who cares about Python and concurrency, then you should also care about Python coroutines. Although they were first introduced in Python 2.5, coroutines remain one of Python's most overlooked features---often vaguely described as a curious \"extension\" of generator functions with little insight as to how they might be applied to real-world problems. This tutorial examines coroutines in a more practical light by showing how they are actually a very elegant way to implement a processing \"task.\" Using this task abstraction, it is possible to use coroutines to implement processing pipelines, event handling systems, and programs based on cooperative multitasking. Moreover, if you define tasks using coroutines, they can be easily incorporated into more traditional concurrent programs that utilize threads or message passing.", "title": "A Curious Course on Coroutines and Concurrency (Part 002)"},
{"date": "Apr 15, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/toscawidgets-test-driven-modular-ajax-part-002-2006270", "runtime": "05:30", "description": "[VIDEO HAS ISSUES: room's AC was loud] If you have ever struggled with having to re-create the same content in multiple places in your web application it might be time to look at ToscaWidgets. ToscaWidgets gives the developer the ability to create reusable web content. This 3 hour lesson will cover installation, integration, and usage of ToscaWidgets. After we have a handle on how to create validated forms with ToscaWidgets, we will spend the second half of this lesson creating a working ajax widget, which we will test the client side component using ToscaWidget javascript technology.", "title": "ToscaWidgets: Test Driven Modular Ajax (Part 002)"},
{"date": "Apr 15, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/faster-python-programs-through-optimization-part-002-2005670", "runtime": "53:55", "description": "[VIDEO HAS ISSUES: vga blurry] Although Python programs may be slow for certain types of tasks, there are many different ways to improve performance. This tutorial will introduce optimization strategies and demonstrate techniques to implement them. Another of the objectives of this course is to give participants the ability to decide what might be the optimal solution for a certain performance problem. Participants are strongly recommended to bring laptops because all techniques are introduced with examples and exercises.", "title": "Faster Python Programs through Optimization (Part 002)"},
{"date": "Apr 15, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/toscawidgets-test-driven-modular-ajax-part-001-2006527", "runtime": "01:06:49", "description": "[VIDEO HAS ISSUES: room's AC was loud] If you have ever struggled with having to re-create the same content in multiple places in your web application it might be time to look at ToscaWidgets. ToscaWidgets gives the developer the ability to create reusable web content. This 3 hour lesson will cover installation, integration, and usage of ToscaWidgets. After we have a handle on how to create validated forms with ToscaWidgets, we will spend the second half of this lesson creating a working ajax widget, which we will test the client side component using ToscaWidget javascript technology.", "title": "ToscaWidgets: Test Driven Modular Ajax (Part 001)"},
{"date": "Apr 15, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/a-configuration-comparison-in-python-2006550", "runtime": "23:01", "description": "When faced with the simple task of figuring out how to use configuration to your advantage in Python there are a myriad of methods. The purpose of this talk is to walk through the standard library modules and the popular Python Package Index modules comparing and contrasting configuration formats and the code that consumes them. Specifically, I would like to walk through the use of the csv module, the ConfigParser module, ConfigObj, lxml, PyYaml and SimpleJSON.", "title": "A Configuration Comparison in Python"},
{"date": "Apr  4, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/working-with-geographic-information-systems-gis-in-python-1967266", "runtime": "01:17:27", "description": "Learn how to work with GIS in Python in a project-based workshop. The first half will cover reading and writing shapefiles and GeoTIFFs, converting between pixelLocations and geoLocations, extracting raster windows using shapefiles and creating a web application that displays nearby locations using PostgreSQL's GIS support and Google Maps. In the second half, you will work with GeoDjango and discover the architecture behind a production web application used in rural electricity planning and an image recognition system that finds houses in rural satellite images.", "title": "Working with Geographic Information Systems (GIS) in Python"},
{"date": "Apr  4, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/designing-a-web-framework-django-s-design-decisions-1967305", "runtime": "35:31", "description": "Django is a high-level web development framework designed for rapid development of database-backed web sites. Since its release three years ago Django's grown by leaps and bounds; it's now part of a highly successful new generation of web development tools.", "title": "Designing a web framework: Django's design decisions"},
{"date": "Apr 15, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/working-with-excel-files-in-python-part-001-2004871", "runtime": "01:00:01", "description": "[VIDEO HAS ISSUES: room AC is noticeable ] Too many people in the Python community think the only way to work with Excel files in Python is using COM on Windows. This tutorial will introduce xlrd and xlwt, a pair of python packages for reading and writing Excel files in pure python that runs on any platform. We'll go through the process of reading excel files to extract data and formatting, writing excel files and filtering existing excel files.", "title": "Working with Excel files in Python (Part 001)"},
{"date": "Apr  4, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/plenary-afternoon-lightning-talks-1967437", "runtime": "01:18:58", "description": "TBA", "title": "Plenary: Afternoon Lightning Talks"},
{"date": "Apr  4, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/a-better-python-for-the-jvm-1967287", "runtime": "43:42", "description": "[VIDEO HAS ISSUES: ambient mic left on; results in echoing audio] At the last PyCon we announced that we were starting a project for improving the Jython compiler. This year we will share the first fruits of that work with the Python community!", "title": "A better Python for the JVM"},
{"date": "Apr  4, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/how-alterway-releases-web-applications-using-zc-buildout-1967324", "runtime": "32:28", "description": "This talk will describe how zc.buildout is used in our company every day to develop, package and distribute Pylons, Django or Plone applications. It will focus on the best practices we have built around the tool and the tools we have built on the top of it to speed up our work.", "title": "How AlterWay releases web applications using ``zc.buildout``"},
{"date": "Apr  4, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/plenary-sprint-prep-pycon-08-sprint-setup-1967450", "runtime": "18:39", "description": "See who was leading what sprints, and what their plans were.", "title": "Plenary: Sprint Prep (pycon 08 sprint setup)"},
{"date": "Apr 15, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/working-with-excel-files-in-python-part-002-2004999", "runtime": "39:08", "description": "[VIDEO HAS ISSUES: room AC is noticeable ] Too many people in the Python community think the only way to work with Excel files in Python is using COM on Windows. This tutorial will introduce xlrd and xlwt, a pair of python packages for reading and writing Excel files in pure python that runs on any platform. We'll go through the process of reading excel files to extract data and formatting, writing excel files and filtering existing excel files.", "title": "Working with Excel files in Python (Part 002)"},
{"date": "Apr 15, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/developing-with-ironpython-part-003-2005197", "runtime": "35:37", "description": "[VIDEO HAS ISSUES: first 5 min muted ] A tutorial on \"Developing with IronPython\": Python for .NET and Mono. The Common Language Runtime is very different to CPython, with a powerful JIT compiler, and different garbage collection and threading model. More importantly, .NET's huge range of libraries can now be used from Python. Various aspects of developing with IronPython will be covered and attendees will put this into practice by extending an example application. Topics include: Differences between IronPython and CPython, including \"Why Use IronPython?\" Introduction to the .NET framework - a dynamic language on a statically typed framework GUIs with Windows Forms Databases Network requests and web services Handling XML Threading Come with laptop - running Linux, Windows or Mac OS X - and ready to code!", "title": "Developing with IronPython (Part 003)"},
{"date": "Apr 15, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/developing-with-ironpython-part-001-2005147", "runtime": "55:04", "description": "[VIDEO HAS ISSUES: first 5 min muted ] A tutorial on \"Developing with IronPython\": Python for .NET and Mono. The Common Language Runtime is very different to CPython, with a powerful JIT compiler, and different garbage collection and threading model. More importantly, .NET's huge range of libraries can now be used from Python. Various aspects of developing with IronPython will be covered and attendees will put this into practice by extending an example application. Topics include: Differences between IronPython and CPython, including \"Why Use IronPython?\" Introduction to the .NET framework - a dynamic language on a statically typed framework GUIs with Windows Forms Databases Network requests and web services Handling XML Threading Come with laptop - running Linux, Windows or Mac OS X - and ready to code!", "title": "Developing with IronPython (Part 001)"},
{"date": "Apr  4, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/about-python-namespaces-and-code-objects-1966956", "runtime": "14:39", "description": "[VIDEO HAS ISSUES: Audio buzzing, talk is only 15 mins (may be cut)] An explanation of some of the underlying concepts of Python, come learn about names and values placed in namespaces, modified by code objects and collected into modules. We'll explore namespaces using the Python interactive prompt, with graphical display of object trees using Graphviz. Also explained will be the namespace concepts of closures and early binding; how to define new objects without subclassing via use of default/curried arguments and closures.", "title": "About Python Namespaces (and Code Objects)"},
{"date": "Apr  4, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pypy-status-talk-1966980", "runtime": "30:16", "description": "[VIDEO HAS ISSUES: Audio humming, other misc audio issues] PyPy has come a long way. It's gone from being purely a research project to providing a flexible and reasonably fast Python Interpreter, itself implemented in Python. Although PyPy is not yet a viable CPython replacement, PyPy is able to run sophisticated python applications like Django and Twisted. In this talk, we'll focus on improvements that happened during the last year in PyPy. This talk will also explain the motivations driving current PyPy developement and its targets for the future.", "title": "PyPy status talk."},
{"date": "Apr  4, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/reinteract-a-better-way-to-interact-with-python-1966913", "runtime": "25:23", "description": "[VIDEO HAS ISSUES: Ambient mic used incorrectly during capture; will result in echoing] Traditionally Python has worked one of two ways: either a program with an edit-run cycle or a command prompt where the user types commands. Reinteract introduces a new way of working where the user creates a worksheet that interleaves Python code with the results of that code. Previously entered code can be changed and corrected. The ability to insert graphs and plots in the worksheet makes Reinteract very suitable for data analysis, but it also is a good for basic experimentation with the Python language. This talk introduces Reinteract and gives a high-level peek at the magic behind the scenes.", "title": "Reinteract: a better way to interact with Python"},
{"date": "Apr  4, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/introduction-to-cherrypy-1966861", "runtime": "28:22", "description": "CherryPy is an HTTP framework which is easy to use and extend. This talk will give an overview of CherryPy's features, with an emphasis on how it differs from \"full-stack\" frameworks (and why that's to your benefit).", "title": "Introduction to CherryPy"},
{"date": "Apr  4, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/a-whirlwind-excursion-through-writing-a-c-extension-1967116", "runtime": "39:54", "description": "[VIDEO HAS ISSUES: Ambient mic used, some echoing] Everyone's heard of C extensions to Python, but few have ventured into those murky depths. This is a quick overview of how to write a C extension, complete with highlights of the C API, memory management, error handling, and type creation. Whether you want to speed up your Python, integrate with legacy code, contribute to Python's core, or just learn a little about how it all works under the covers, you will enjoy this trip through unfamiliar territory. I guarantee you will return safely.", "title": "A Whirlwind Excursion through Writing a C Extension"},
{"date": "Apr  4, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/behind-the-scenes-of-everyblock-com-1967060", "runtime": "47:38", "description": "[VIDEO HAS ISSUES: Audio humming] Adrian Holovaty, bad-boy YouTube guitar star (search for him, if you dare!) and co-author of the Django web framework, takes you under the hood of EveryBlock.com, a Knight Foundation News Challenge startup which rounds up local news and information, and is powered 100% by Python and Django.", "title": "Behind the scenes of EveryBlock.com"},
{"date": "Apr  4, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/functional-testing-of-desktop-applications-1967153", "runtime": "42:16", "description": "Many advocates of unit testing believe that testing desktop (GUI) applications is so difficult as to not be worth it. Not only is it possible, but 'functional testing' (testing an application from the point of view of the user) is an important part of an agile development process.", "title": "Functional Testing of Desktop Applications"},
{"date": "Apr  4, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pylons-and-django-on-jython-1967034", "runtime": "55:56", "description": "Post production confusion resulted in 2 talks for the price of 1: Pylons_on_Jython and Django_on_Jython.", "title": "Pylons and Django on Jython"},
{"date": "Apr  4, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/plenary-morning-lightning-talks-1967194", "runtime": "51:30", "description": "[VIDEO HAS ISSUES: ] TBA", "title": "Plenary: Morning Lightning Talks"},
{"date": "Apr  4, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/paver-easy-build-and-deployment-automation-for-python-projects-1967164", "runtime": "29:08", "description": "[VIDEO HAS ISSUES: Audio clipping, ambient mic up (echoing audio)] Paver makes managing common aspects of Python projects easier, by providing just the right kind of scaffolding on which to automate building and packaging of your software. In this talk, you'll see how easy it is to get started with Paver, how you can use Paver without alienating other users of your code, and how you can use Paver to trivially extend Python's distutils commands.", "title": "Paver: easy build and deployment automation for Python projects"},
{"date": "Apr  3, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/keynote-reddit-steve-huffman-and-alexis-ohanian-1960972", "runtime": "38:55", "description": "TBA", "title": "Keynote: Reddit: Steve Huffman and Alexis Ohanian"},
{"date": "Apr  3, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/jython-progress-1962286", "runtime": "30:41", "description": "[VIDEO HAS ISSUES: audio humming, ambient mic left on (echoing)] In this talk I will discuss some of the most interesting advances that have occurred in the 2.5 release of Jython, and some of the cool stuff that is being developed for 2.7 and 3.0. I will pay particular attention to Python frameworks and apps that are now working in Jython. I will also talk about some of the Java integration features that will be in Jython 2.5 (and beyond). I will demo some of the cool things that you can do with Python and Java together.", "title": "Jython Progress"},
{"date": "Apr  4, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/abstraction-as-leverage-1966769", "runtime": "40:00", "description": "[VIDEO HAS ISSUES: Ambient mic used incorrectly during capture; will result in poor quality audio] Abstraction is a powerful servant, but a dangerous master. We code, design, think, debug ... on a tower of abstractions. Spolsky's Law tells us that \"All abstractions leak\". This talk explores why they leak, why that's often a problem, what to do about it; moreover, I cover why sometimes abstractions SHOULD \"leak\", and thus how best to produce and consume abstraction layers.", "title": "Abstraction as Leverage"},
{"date": "Apr  3, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pinax-a-platform-for-rapidly-developing-websites-1962306", "runtime": "33:36", "description": "[VIDEO HAS ISSUES: echoing audio] Pinax is an open-source platform built on the Django Web Framework that dramatically reduces the time it takes to develop Web sites. By providing a wealth of social and collaborative features out of the box, Pinax rapidly increases the speed at which your websites can be developed and launched. This talk will provide an overview of Pinax and how you can use it as the foundation for your sites.", "title": "Pinax: a platform for rapidly developing websites"},
{"date": "Apr  4, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/py-test-i-rapid-testing-with-minimal-effort-1966636", "runtime": "01:21:01", "description": "[VIDEO HAS ISSUES: Audio clicking/issues] This tutorial introduces automated testing for Python using py.test (http://codespeak.net/py/dist/test.html). We begin with a very short overview of testing in Python and where unit testing py.test fit in. The rest of the tutorial is hands on: a short introduction of something new followed by exercises to experiment with it. First is basic usage of py.test and the features which simplify your test writing experience. We walk through the implementation of tests, setup and tear-down of test state, debugging facilities and point out similarities/differences to other test tools. We talk about command line options which save time running and debugging your tests. We then drop briefly into lecture mode and discuss additional features useful in particular circumstances, such as running Javascript tests, testing the format of text documents, or using py.test in a build system. We will close with time to answer questions and discuss topics from the students.", "title": "py.test I - rapid testing with minimal effort"},
{"date": "Apr  4, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/precise-state-recovery-and-restart-for-data-analysis-applications-1966839", "runtime": "22:23", "description": "[VIDEO HAS ISSUES: Ambient mic used incorrectly during capture; will result in echoing audio] Computer programs fail. We do everything we can to prevent, trap, and handle errors before they cause trouble, but there comes a time in every program's life when its assumptions about the universe are suddenly not true and there is nothing left to do but \"assert False\".", "title": "Precise state recovery and restart for data-analysis applications"},
{"date": "Apr  4, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/introduction-to-python-profiling-1966784", "runtime": "28:48", "description": "[VIDEO HAS ISSUES: Ambient mic used incorrectly; results in poor/echoing audio] Python's implementation is slow, but you can often write fast Python if you know how to profile your code effectively. This presentation will show you how to use the built-in cProfile module to capture profile data, both in simple scripts and more complex GUI environments. We'll look at how to interpret the profile/cProfile reports as well as a few external tools to make the reports easier to understand. We'll discuss how to make profiling an effective tool for you and some common \"hot spots\" you'll discover in Python code.", "title": "Introduction to Python Profiling"},
{"date": "Apr  4, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/python-in-a-sandbox-1966655", "runtime": "27:13", "description": "[VIDEO HAS ISSUES: Ambient mic incorrectly used during capture; results in poor audio] How to run untrusted Python code? Old question, new answer! We'll showcase the PyPy virtualization approach which allows to control all IO, syscalls, CPU and RAM resources of a Python interpreter. We'll discuss the usage model, shortcomings and future possibilities.", "title": "Python in a sandbox"},
{"date": "Apr  4, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/searching-for-neutrinos-using-python-at-the-bottom-of-the-world-1966801", "runtime": "31:03", "description": "[VIDEO HAS ISSUES: Ambient and/or camera mic used, results in poor quality audio] The authors of the Data Acquisition System used for the IceCube Neutrino Detector at the South Pole describe the critical role Python plays in the software ecology of IceCube, and touch on tangential issues of working in a large, international collaboration, as well as life and work at the South Pole.", "title": "Searching for Neutrinos Using Python at the Bottom of the World"},
{"date": "Apr  4, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/python-for-cs1-not-harmful-to-cs-majors-and-good-for-everyone-1966814", "runtime": "29:43", "description": "[VIDEO HAS ISSUES: Audio humming] At Michigan State Computer Science Dept. we have recently converted our CS1 course (200 students/semester, about 60% non-CS majors) to Python, previously taught in C++. Follow on courses for CS majors (CS2, etc.) still use and teach C/C++. Right around the conversion point, we had two groups of students taking the C++ CS2 course: those that took CS1 in Python and those that took CS1 in C++. We examined the performance of those two groups of students in the CS2-C++ course (covering the same topics as previously), looking for any significant differences as measured by t-test with respect to: final exam grade, overall programming project scores and final course grade. No significant differences between CS1-Python and CS1-C++ were found. Further, multiple regression analysis showed that only GPA was a good predictor of the three outcomes. Neither CS-1 Python nor CS1-C++ was a predictor. Our conclusion is that a CS1-Python course was as good a preparation for a CS2-C++ course as was a CS1-C++ course. Furthermore, CS1-Python was a far better terminal course for non-majors than CS1-C++, and both majors and non-majors were could address a wider range of practical STEM problem than previously. We have written a CS1-Python book for others who wish to teach a Python-CS1 course that emphasizes teaching Python to CS1 students with a theme of data manipulation.", "title": "Python for CS1 Not Harmful to CS Majors (and good for everyone)"},
{"date": "Apr  2, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/ironpython-implementation-1959289", "runtime": "23:05", "description": "IronPython is an implementation of Python running on .NET. This talk will provide an overview of the IronPython internals. The talk will start with a high-level walk through of the IronPython architecture and source layout. From there we\u2019ll drill into details such as method dispatch, how the .NET and Python type systems interrelate, multi-runtime support, and how IronPython uses the DLR. Finally we\u2019ll bring it all together and show you how you can do Python aware interop between .NET and IronPython. Whether you\u2019re just curious about language implementations, planning on hosting IronPython in your own app, or just want to write a new built-in module for IronPython you\u2019ll find something interesting in this talk. Knowledge of C sharp would be helpful but is not required.", "title": "IronPython Implementation"},
{"date": "Apr  2, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/securing-web-access-with-voip-peace-of-mind-using-multifactor-authentication-1959161", "runtime": "26:17", "description": "You get a call from your bank asking \"Are you logging into your account right now?\" With your answer you can either continue banking or stop an intruder from accessing your account, without the hassles of the Chase secret agent man. While a phone call to verify identity would be overkill for a forum post, you can add this to your website login process to verify identity and give your customers peace of mind.", "title": "Securing Web Access with VoIP: Peace of Mind Using Multifactor Authentication"},
{"date": "Apr  2, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/pumping-iron-into-python-intro-to-fepy-1959180", "runtime": "25:59", "description": "As Python grows in popularity, IronPython has started making more waves. What is IronPython and why should regular Python programmers be familiar with it? This session will introduce the open source .NET implementation of Python known as IronPython without using Windows. Come see FePy (IronPython community edition) in action via Mono -- a cross-platform open source implementation of the .NET framework.", "title": "Pumping Iron into Python: Intro to FePy"},
{"date": "Apr  2, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/python-enabling-mobile-media-centers-1959336", "runtime": "27:41", "description": "How python saved the day of a small group of developers having to write a complex media center software for a mobile system in less than 4 months.", "title": "Python enabling mobile media centers"},
{"date": "Apr  2, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/making-games-in-python-tools-and-techniques-at-ccp-1959358", "runtime": "25:54", "description": "Over the past eight years CCP have been developing computer games like EVE Online (www.eve-online.com) using Python. In this presentation we'll show the Python-based tools we've created and techniques we've employed to aid us in this process. Our framework customises the development experience which our programmers engage in, from our own custom namespacing approach, to code reloading, unit testing, systems testing and Python-based GUIs. We'll endeavour to demonstrate each of these and where possible elaborate on what is involved in implementing similar systems.", "title": "Making games in Python - Tools and techniques at CCP"},
{"date": "Apr  2, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/leveraging-restructuredtext-in-your-projects-1959318", "runtime": "29:04", "description": "Learn how reStructuredText, a powerful text markup language, can make documents rich containers of extractable data and drive your unit tests while still remaining very readable and convertable to HTML, LaTeX and PDF. Hear about Sphinx, the software used for docs.python.org that hierarchically organizes and cross-indexes multiple documents. Explore the implementation of new directives and text roles for supporting flash video embedded in your documents.", "title": "Leveraging ReStructuredText in your Projects"},
{"date": "Apr  2, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/using-sphinx-and-doctests-to-provide-robust-documentation-1959301", "runtime": "22:22", "description": "There has been a lot of buzz in the Python community about Python's new standard in Documentation systems. This talk starts with a discussion about the motivation for using sphinx. We then move on to a short screencast which demonstrates how to get started with sphinx, and how to utilize sphinx's autodoc features. I will then discuss shortly doctests, and how they can be used to both test and document your project. Next I demonstrate how nosetests, and sphinx can be integrated in your development process to produce well tested documentation, using another short screencast.", "title": "Using Sphinx and Doctests to provide Robust Documentation"},
{"date": "Apr  2, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/plenary-evening-lightning-talks-1959467", "runtime": "30:08", "description": "TBA", "title": "Plenary: Evening Lightning Talks"},
{"date": "Apr  2, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/stackless-python-in-eve-pt-2-1959372", "runtime": "30:34", "description": "At PyCon 2006 we gave a talk about how Stackless Python was being used to power EVE Online, a MMORPG developed and run by CCP Games in Iceland. Three years on, we report on how we redesigned the system's internals using a new IO framework called StacklessIO and how it helped solve network latency issues and improve the game's performance and scaling.", "title": "Stackless python in EVE, pt. 2"},
{"date": "Apr  2, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/a-whole-new-opengl-opengl-3-x-in-pyopengl-1959419", "runtime": "30:49", "description": "OpenGL 3.0 has deprecated the traditional \u201cfixed\u201d OpenGL 1.0 pipeline. Almost every PyOpenGL script has been built using the OpenGL 1.0 fixed pipeline. When OpenGL 3.1 arrives, those scripts will break on operating systems that solely support 3.1, particularly the newest and best hardware. This talk will describe how to transform your PyOpenGL code to be \u201cfuture proof\u201d and to take advantage of the programmable OpenGL pipeline and related features.", "title": "A Whole New OpenGL, OpenGL 3.x in PyOpenGL"},
{"date": "Apr  2, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/google-app-engine-how-to-survive-in-google-s-ecosystem-1957219", "runtime": "35:26", "description": "It all started in 2003 with Plone, continued in 2005 with Zope3 and right now the road seems to go to the Cloud, namely Google App Engine.", "title": "Google App Engine: How to survive in Google's Ecosystem"},
{"date": "Apr  2, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/python-2-6-and-3-0-compatibility-1958951", "runtime": "39:09", "description": "This talks takes a look at the various options of migrating to Python 3, and takes up examples of some tricks you can do to make you code run unmodified under both 2.6 and 3.0.", "title": "Python 2.6 and 3.0 compatibility"},
{"date": "Apr  2, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/plone-in-the-cloud-an-on-demand-cms-hosted-on-amazon-ec2-1958872", "runtime": "28:03", "description": "The rise of utility computing platforms such as Amazon EC2 has made it more feasible to build turnkey hosted solutions on top of open source software. Learn how we built PondCMS, a turnkey CMS deployed to Amazon's EC2. This session will discuss the advantages of hosting Plone sites in the elastic computing cloud and some of the challenges we faced.", "title": "Plone in the Cloud : an on-demand CMS hosted on Amazon EC2"},
{"date": "Apr  2, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/dejavu-language-integrated-query-for-data-1958907", "runtime": "42:05", "description": "Before Microsoft created LINQ, Python had Dejavu: a full-featured framework for querying wildly different data sources using normal Python syntax. This talk will give an overview of Dejavu, and show how easy it is to integrate and manage data in Python.", "title": "Dejavu: Language INtegrated Query for data"},
{"date": "Apr  2, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/plugins-and-monkeypatching-increasing-flexibility-dealing-with-inflexibility-1958972", "runtime": "31:21", "description": "By using plugins, one can create software that is easily extensible by others, thereby promoting collaborative development. The flip side of extensible software occurs when dealing with some standard framework whose interface is closed but which does not do exactly what is desired. In this case, monkeypatching may be worth considering.", "title": "Plugins and monkeypatching: increasing flexibility, dealing with inflexibility"},
{"date": "Apr  2, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/panel-object-relational-mappers-philosophies-and-design-decisions-1959058", "runtime": "51:27", "description": "Compare and contrast the philosophies of the different ORMs. Also look at the technical implementation, design decisions, and difficulties.", "title": "Panel: Object Relational Mappers: Philosophies and Design Decisions."},
{"date": "Apr  2, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/class-decorators-radically-simple-1959015", "runtime": "25:33", "description": "Class decorators have the similar utility as metaclasses but are simple enough to actually read and write.", "title": "Class Decorators: Radically Simple"},
{"date": "Apr  2, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/drop-acid-and-think-about-data-1959086", "runtime": "43:37", "description": "Building large systems on top of a traditional single-master RDBMS data storage layer is no longer good enough. This talk explores the landscape of new technologies available today to augment your data layer to improve performance and reliability. Is your application a good fit for caches, bloom filters, bitmap indexes, column stores, distributed key/value stores, or document databases? Learn how they work (in theory and practice) and decide for yourself.", "title": "Drop ACID and think about data"},
{"date": "Apr  2, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/plenary-evening-lightning-talks-1959116", "runtime": "41:29", "description": "TBA", "title": "Plenary: Evening Lightning Talks"},
{"date": "Apr  2, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/a-winning-combination-plone-as-a-cms-your-favorite-python-web-framework-as-a-frontend-1959134", "runtime": "25:44", "description": "Plone is a great content management system, recently voted best non-PHP open source CMS in a popular yearly contest. Many Python web developers, however, find Plone somewhat heavy and are not precisely in love with Zope, the web framework behind the CMS.", "title": "A winning combination: Plone as a CMS, your favorite Python web framework as a frontend"},
{"date": "Apr  2, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/concurrency-and-distributed-computing-with-python-today-1957176", "runtime": "38:00", "description": "This talk will cover the recent changes to Python 2.6, including a brief introduction to the threading module and multiprocessing inclusion and changes but will primarily focus on the concurrent and distributed ecosystem for Python today.", "title": "Concurrency and Distributed Computing with Python Today"},
{"date": "Apr  2, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/keynote-guido-van-rossum-1957096", "runtime": "58:12", "description": "TBA", "title": "Keynote: Guido van Rossum"},
{"date": "Apr  2, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/on-the-importance-of-pypi-in-delivering-and-building-python-softwares-mirroring-fail-over-and-thi-1957107", "runtime": "31:06", "description": "PyPI has become an important piece of the puzzle when it comes to build and deliver some Python applications : you can declare dependencies in your package to third-party libraries, and tools like setuptools or zc.buildout will try to get them at PyPI.", "title": "On the importance of PyPI in delivering and building Python softwares - mirroring, fail-over and thi"},
{"date": "Apr  2, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/challenges-and-opportunities-for-python-1957136", "runtime": "50:30", "description": "We are moving firmly back into a \"polyglot\" world in terms of programming languages. This presents great opportunities for Python (and other dynamic languages) as well as challenges. In this talk I'll be discussing some of the challenges and opportunities that I see for Python, based on my experience with dynamic language runtimes at Sun.", "title": "Challenges and Opportunities for Python"},
{"date": "Apr  2, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/all-i-really-need-to-know-about-testable-maintainable-packagable-scripts-1957153", "runtime": "27:23", "description": "\"Scripting\" with Python is becoming more common. This talk will discuss why you would want to \"script\" with Python (instead of say bash). It will also discuss best practices that will allow you to actually test your scripts, maintain them over time, and easily distribute them. Python has some advantages to bash in these areas.", "title": "All I really need to know about [testable, maintainable, packagable] \"scripts\" ...."},
{"date": "Apr  2, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/the-browser-interface-local-server-bils-application-1957143", "runtime": "30:59", "description": "Web applications provide many advantages over traditional desktop apps, but there are still times when users need to run an application without a network connection. A Browser Interface, Local Server (BILS) application provides a way to present your users with exactly the same interface as the web app, using a single code base, while the app runs on entirely on the local machine. We will discuss a number of options available for and shortcomings of developing a BILS app, and present the example of NOAA's CameoChemicals, a Pylons-based web app wrapped in a wxPython interface for desktop use.", "title": "The Browser Interface, Local Server (BILS) Application"},
{"date": "Apr  2, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/seven-ways-to-use-python-s-new-turtle-module-1957160", "runtime": "32:47", "description": "Since releases 2.6/3.0 Python has a new turtle module. It was conceived primarily as a tool for teaching in a way that allows for using a range of different programming styles as well as different approaches to doing geometry, thus constricting the instructor's approach and ideas as little as possible. One of the main goals was to provide quick interactive access to nevertheless powerful graphics without any need of preliminary GUI-composing overhead.", "title": "Seven ways to use Python's new turtle module"},
{"date": "Apr  2, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/batteries-included-python-on-low-cost-tiny-embedded-wireless-devices-1957193", "runtime": "41:49", "description": "Think Python is too resource-intensive for low-power 8-bit embedded systems? Think again! Developed for low-cost wireless (802.15.4) modules, the SNAPpy virtual machine enables users to modify embedded device behavior dynamically over the air, leveraging the power of Python. In this session a key architect of the technology will discuss software, the virtual machine approach, and real-world success stories. This presentation features live demonstrations of the SNAPpy virtual machine running on readily available battery-operated wireless sensor nodes (RF Engines) from Synapse. You'll also see first-hand the power of Portal - a wireless application development GUI developed using wxPython.", "title": "Batteries Included! Python on Low Cost Tiny Embedded Wireless Devices"},
{"date": "Apr  2, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/dabo-rich-client-web-applications-in-100-python-1957207", "runtime": "27:19", "description": "Imagine being able to create a rich web application using nothing but Python. No HTML, Javascript - just pure Python. Now you can with the Dabo framework. You can now create web applications as well as traditional desktop applications using Dabo. This session will cover the basics of developing both web and desktop applications using Dabo.", "title": "Dabo: Rich Client Web Applications in 100% Python"},
{"date": "Apr  2, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/state-of-turbogears-1957205", "runtime": "31:31", "description": "The TurboGears web framework has stable and supported 1.x and 2.x versions. This talk will cover what's new in these new versions, and what's coming to TurboGears in \u0f45. I'll also be talking about what web framework development means in a world of reusable WSGI components, and how the python web world has radically remapped itself over the 2 and a half years since TurboGears was released.", "title": "State of TurboGears"},
{"date": "Apr  2, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/python-in-the-enterprise-how-to-get-permission-1956933", "runtime": "34:08", "description": "If you start your own company or run your own project you can usually choose the programming language, but if you work for a large company there are probably architects and others who keep a tight rein on approved technology. How do you steer a big ship towards dynamic programming languages, and how fast can it turn?", "title": "Python in the Enterprise - How to Get Permission"},
{"date": "Apr  2, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/panel-functional-testing-tools-in-python-1957007", "runtime": "01:00:35", "description": "As we become more efficient at producing web sites, inevitably the issue of quality (or lack thereof) can begin to slow the velocity at which implementation teams are able to move forward. Functional testing tools can help increase quality, bolster team confidence and keep things running smoothly.", "title": "Panel: Functional Testing Tools in Python"},
{"date": "Apr  2, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/building-tests-for-large-untested-codebases-1956922", "runtime": "45:09", "description": "Covering large codebases with automated tests is a challenging and frustrating task that can be made much easier by approaching the problem systematically and choosing good tools. I will discuss a number of approaches and freely available tools that can help people \"tame\" pre-existing codebases with automated tests, and show the evolution of tests for a complex codebase under these approaches and tools.", "title": "Building tests for large, untested codebases"},
{"date": "Apr  2, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/learning-and-teaching-python-programming-the-crunchy-way-1957028", "runtime": "30:16", "description": "Crunchy (http://code.google.com/p/crunchy) is a program that transforms a static Python tutorial into an interactive session within a browser. In this talk, I will present Crunchy, focusing on the features that are specifically designed to be helpful in a formal teaching setting.", "title": "Learning and Teaching Python Programming: The Crunchy Way"},
{"date": "Apr  2, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/easy-ai-with-python-1957038", "runtime": "48:15", "description": "Survey several basic AI techniques implemented with short, open-source Python code recipes. Appropriate for educators and programmers who want to experiment with AI and apply the recipes to their own problem domains. For each technique, learn the basic operating principle, discuss an approach using Python, and review a worked out-example. We'll cover database mining using neural nets, automated categorization with a naive Bayesian classifier, solving popular puzzles with depth-first and breath-first searches, solving more complex puzzles with constraint propagation, and playing a popular game using a probing search strategy. Slides: http://us.pycon.org/media/2009/talkdata/PyCon2009/071/PyCon2009_AI_Alt.ppt 00:00 Intro 05:00 Eight Queens - Six Lines http://code.activestate.com/recipes/576647/06:45 Alphametics Solver http://code.activestate.com/recipes/576615/ 11:30 Neural Nets for Data Mining http://code.activestate.com/recipes/496908-data-mining-with-neural-nets/ 16:20 Each unique value gets a neuron 22:10 Code 22:30 Mastermind http://code.activestate.com/recipes/496907/31:20 Shannon's formula applied to strategy - select probe with greatest information 33:55 Sudoku-style Puzzle http://code.activestate.com/recipes/473893-sudoku-solver/ 38:50 Bayesian Classifier http://www.divmod.org/projects/reverend or http://sourceforge.net/projects/reverend/43:30 Code 44:50 Hettinger http://users.ren.com/python/download/puzzle.py47:30 Q&A", "title": "Easy AI with Python"},
{"date": "Apr  2, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/introduction-to-multiprocessing-in-python-1957019", "runtime": "43:39", "description": "This talk will cover the new multiprocessing package included with Python 2.6 (and 3.0) focusing on design, benefits, practical usage, application construction, gotchas and how to use it to build multi-core and distributed applications.", "title": "Introduction to Multiprocessing in Python"},
{"date": "Apr  2, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/building-a-simple-configuration-driven-web-testing-framework-with-twill-1956926", "runtime": "27:59", "description": "Building a flexible and scalable functional testing framework for your application is typically an evolutionary process. You experiment and find things that work, and things that don't, particularly if you have little programming experience. Sometimes, you proceed down a path that binds your hands later down the road, and a massive refactor is needed. I would like to present a simple testing framework built upon several existing, free technologies (ConfigObj, twill, nose) and models (Page Objects, Scenario Objects, Abstract State Machines) that is easy to configure, extend, and maintain.", "title": "Building a Simple Configuration-driven Web Testing Framework With Twill"},
{"date": "Apr  2, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/how-python-is-developed-1957059", "runtime": "25:51", "description": "Python, like any other open source project, has its own way of doing things when it comes to development. To an outsider it can seem complicated and difficult to break into. But in fact, Python's development practices are simple as long as you know what the basic workflow is. This talk will go over that workflow, from how a bug ends up getting fixed to how a new language feature get added. In the end people should have an understanding of how Python is developed and how anyone can contribute to the project.", "title": "How Python is Developed"},
{"date": "Apr  2, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/ironpython-directions-data-and-demos-1957052", "runtime": "46:27", "description": "Come learn about our secret plans to use IronPython to take over the world. The emphasis will be on demos showing the seductive possibilities that IronPython enables for Python developers. These include taking advantage of the newest features in Windows 7, running your Python code in the browser with Silverlight, and many more.", "title": "IronPython: Directions, Data and Demos"},
{"date": "Apr  2, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/challenges-and-opportunities-for-python-1957077", "runtime": "50:30", "description": "We are moving firmly back into a \"polyglot\" world in terms of programming languages. This presents great opportunities for Python (and other dynamic languages) as well as challenges. In this talk I'll be discussing some of the challenges and opportunities that I see for Python, based on my experience with dynamic language runtimes at Sun.", "title": "Challenges and Opportunities for Python"},
{"date": "Mar 29, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/topics-of-interest-ian-bicking-1941789", "runtime": "43:34", "description": "Ian Bicking, man of interest, discusses topics of interest. Interesting topics may include metaprogramming, whitespace, process models, past design mistakes, ambitious new directions for future design mistakes, a best dressed/worst dressed guide to Python libraries, open source community design patterns, and whatever else meets his exacting standards for Interestingness.", "title": "Topics of Interest - Ian Bicking"},
{"date": "Apr  2, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/how-to-give-a-python-talk-1956841", "runtime": "26:17", "description": "This session will discuss how you -- yes, *you* -- can give talks about Python at your local user group and at events such as PyCon. The talk will discuss how to decide upon a topic, how to prepare the presentation, and suggest various tips for improving your delivery.", "title": "How to Give a Python Talk"},
{"date": "Apr  2, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/strategies-for-testing-ajax-web-applications-1956818", "runtime": "27:58", "description": "As a Python web developer you are probably familiar with the paradigms of testing simple web applications. Your test case makes a GET / POST request, your program responds with an HTML page, and your test verifies the HTML elements. Unfortunately, today's typical web application is not so simple! Since modern browsers support asynchronous JavaScript (Ajax) very well, the HTML response might deliver program code to run on the client's web browser. The browser's runtime environment would then interact with your server-side Python program and you now have a big problem: How does your test suite cover both server-side functionality and client-side functionality?", "title": "Strategies For Testing Ajax Web Applications"},
{"date": "Apr  2, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/fedora-pyinfrastructure-1956825", "runtime": "18:04", "description": "Fedora's Infrastructure team utilizes multiple python technologies and has deployed 6 home built TurboGears applications in the last year and a half. It's not just a development platform, it's also a way of life in the Infrastructure team. Lots of custom scripts and systems administration via func only scratch the surface of what Fedora is doing with Python.", "title": "Fedora pyInfrastructure"},
{"date": "Apr  2, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/building-an-automated-qa-infrastructure-using-open-source-python-tools-1956833", "runtime": "27:40", "description": "The benefits of continuous test integration are well known. Setting up an infrastruture for this can be a lot of work. It involves integration with version control, automated product building and running of tests, reporting on results in an accessible way, code coverage measuring, and code analysis such as with lint-like tools. We discuss how to set up such an automatic QA system using extensible open source python tools. The focus will be on Buildbot (http://buildbot.net), an open-source, Python-based continuous integration framework. Topics include a survey of the current best available open source software; testing code in languages other than python (and the benefits of using tools written in python in such a situation); strategies for extending these tools to meet custom needs, while avoiding maintainability and quality pitfalls; and special bonus details for QA of projects implemented in python specifically.", "title": "Building an Automated QA Infrastructure using Open-Source Python Tools"},
{"date": "Apr  2, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/panel-python-vms-1956861", "runtime": "54:42", "description": "This panel will bring together all four major implementations of Python (CPython, IronPython, Jython, and PyPy) in one room to answer questions from the public for the first time. This Q&A session will provide people a chance to get questions answered from key members of the various Python VM teams.", "title": "Panel: Python VMs"},
{"date": "Apr  2, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/coverage-testing-the-good-and-the-bad-1956882", "runtime": "30:39", "description": "Coverage testing measures the execution of code, and is a great way of testing your tests: are they exercising all of your code? There are some pitfalls to be aware of in implementing coverage testing, though. 100% coverage is a fabulous ideal, but not only is it hard to reach, it still leaves a lot to be desired.", "title": "Coverage testing, the good and the bad."},
{"date": "Apr  2, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/plenary-intro-morning-lightning-talks-1956895", "runtime": "31:55", "description": "TBA", "title": "Plenary: Intro & Morning Lightning Talks"},
{"date": "Apr  2, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/using-windmill-1956900", "runtime": "28:27", "description": "Windmill is the best-integrated solution for Web test development and its flexibility is largely due to its development in Python. This talk will get you writing and running automated tests and show off some of the most useful built-in tools for debugging and continuous integration.", "title": "Using Windmill"},
{"date": "Apr  2, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/twisted-amqp-and-thrift-bridging-messaging-and-rpc-for-building-scalable-distributed-applications-1956908", "runtime": "31:37", "description": "In building our new online database at Fluidinfo, we needed scalable and reliable messaging/RPC for a system of heterogeneous services. We chose two proven open-source components, AMQP and Thrift, and adapted these to work with Twisted asynchronous networking.", "title": "Twisted, AMQP and Thrift: Bridging messaging and RPC for building scalable distributed applications"},
{"date": "Mar 28, 2009", "url": "http://blip.tv/pycon-us-videos-2009-2010-2011/lightning-talk-03-28-09-new-python-licence-1940650", "runtime": "04:31", "description": "", "title": "Lightning Talk - 03-28-09 - New Python Licence"}]